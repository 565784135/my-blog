{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/404.html","path":"404.html","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1498898213247},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1498898213247},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1498898213247},{"_id":"themes/hexo-theme-next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1498900521000},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1498898213247},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1498898213247},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1498898213247},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1498898213247},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1498898213247},{"_id":"themes/hexo-theme-next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1498898213247},{"_id":"themes/hexo-theme-next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1498898213247},{"_id":"themes/hexo-theme-next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1498898213247},{"_id":"themes/hexo-theme-next/_config.yml","hash":"5e3cf1ea6631c7bfdbd9a9dbe946ca97bdb03f5e","modified":1498975850234},{"_id":"themes/hexo-theme-next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1498898213247},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1498898213247},{"_id":"themes/hexo-theme-next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1498898213251},{"_id":"source/_posts/do-vnp.md","hash":"3d284ada18933cbebfe3c8b1ca4a7be171fe8e87","modified":1498972569237},{"_id":"source/_posts/express-jwt.md","hash":"60029d99b92bc072bce5c9b5806318ceef89c9da","modified":1498972601000},{"_id":"source/_posts/something-to-talk.md","hash":"96a22fb483e21d034cd63b2dba0ac6a6e3000c2d","modified":1498973440801},{"_id":"source/_posts/use-apidoc-to-write-api-doc.md","hash":"8dfd66b7e4fc06ca800a946725bb749115c29bf4","modified":1498972644789},{"_id":"themes/hexo-theme-next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1498898213215},{"_id":"themes/hexo-theme-next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/config","hash":"073c1c5af4e0139a70cc8de631817a8e357f5832","modified":1498898213215},{"_id":"themes/hexo-theme-next/.git/index","hash":"7e3dfb6275fda2b3fda26021918a878c142945d0","modified":1498900290088},{"_id":"themes/hexo-theme-next/.git/packed-refs","hash":"458c1cd159bff8b80cb42d8eaca86fb4686a0982","modified":1498898213215},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1498898213247},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1498898213247},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1498898213247},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"a44305f8fa7fe9c80eb50c0696a704424b589750","modified":1498898213247},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1498898213251},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1498898213287},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1498898213287},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213259},{"_id":"themes/hexo-theme-next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1498897784890},{"_id":"themes/hexo-theme-next/.git/logs/HEAD","hash":"6cab2240cb9d619127bb625fe7927d84e9023150","modified":1498898213215},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1498898213247},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1498898213247},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"9481f43ed356e00df7b519e92ad0becebc9e1505","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"a2b213c1a7c37cd6e4749f2018371f4c1f4f0d23","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"ea88ca3406b06ba53591566a80b22353345a84df","modified":1498976212000},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1498898213251},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1498898213255},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1498898213255},{"_id":"themes/hexo-theme-next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1498898213255},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1498898213259},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213251},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498898213259},{"_id":"themes/hexo-theme-next/.git/refs/heads/master","hash":"6aa1413002cbbd42cb24949b4a0d415f03c0137b","modified":1498898213215},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1498898213251},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1498898213263},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1498898213283},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1498898213283},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1498898213283},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1498898213279},{"_id":"themes/hexo-theme-next/.git/logs/refs/heads/master","hash":"6cab2240cb9d619127bb625fe7927d84e9023150","modified":1498898213215},{"_id":"themes/hexo-theme-next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1498898213215},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1498898213251},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1498898213251},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1498898213263},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1498898213263},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1498898213263},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1498898213287},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-247ff935991237da96b0d2547cfe24db36337a1f.idx","hash":"97d0654f8240631cdb688913b85184a21fdb8574","modified":1498898213191},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/origin/HEAD","hash":"6cab2240cb9d619127bb625fe7927d84e9023150","modified":1498898213215},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1498898213255},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1498898213259},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1498898213271},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1498898213271},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1498898213279},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1498898213267},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1498898213287},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1498898213275},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-247ff935991237da96b0d2547cfe24db36337a1f.pack","hash":"0edea030fe653e704154c027c2df813b73cd8260","modified":1498898213191},{"_id":"public/archives/index.html","hash":"77bf5fc355f4b51442e4421c796dc8f74677130b","modified":1498976304281},{"_id":"public/archives/2017/index.html","hash":"cb3be022643dd4ba2a4ff38ed883910858c4ed90","modified":1498976304307},{"_id":"public/archives/2017/07/index.html","hash":"52533ca3706f0afb77cf2d705c45088e9f8de556","modified":1498976304309},{"_id":"public/2017/07/01/do-vnp/index.html","hash":"e50423d5a7a558674e9204eb0f68e5ca977b30c7","modified":1498965703471},{"_id":"public/2017/07/01/something-to-talk/index.html","hash":"52b5e86c184b1518a27f9401dd43f2f9e1e80a02","modified":1498976304318},{"_id":"public/2017/07/01/express-jwt/index.html","hash":"27f5df6daeaef77a06c8a73cc36ab174d58f47bf","modified":1498967966175},{"_id":"public/2017/07/01/use-apidoc-to-write-api-doc/index.html","hash":"a57eba019ea6ea36ebdd500cd6924ae8934f2e2f","modified":1498968261749},{"_id":"public/index.html","hash":"3f87db2d9f414a81258494a1eed03aa63bca5b07","modified":1498976304309},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1498965703996},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1498965703996},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1498965703996},{"_id":"public/css/main.css","hash":"f69f6890db3f0e5d3219bd4d6884997ff9bf9075","modified":1498965703996},{"_id":"public/2017/07/02/do-vnp/index.html","hash":"f348f76e9285e26a477ca87cc7aca9d43fe9edcf","modified":1498967966176},{"_id":"public/2017/07/02/something-to-talk/index.html","hash":"0df8eac11efe7ca46006d5758d53246da10866e4","modified":1498968261749},{"_id":"public/archives/2017/01/index.html","hash":"934eadb53f93aea38cb15a780b795698561f8f9a","modified":1498976304309},{"_id":"public/2017/01/01/do-vnp/index.html","hash":"94c848fe518b7053a10f9d5f073f40e594adb080","modified":1498968261750},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","hash":"a1e3e7d859ff0abddbfdd11d9ad196005c2f2c21","modified":1498970299453},{"_id":"themes/hexo-theme-next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1498970694708},{"_id":"public/categories/工具类/index.html","hash":"c337e96e6802c3a1716d55acced2a29ab5d99dd5","modified":1498976304317},{"_id":"public/categories/node-js/index.html","hash":"bc808736eed9f75659482d2e8a884283eaa7d55f","modified":1498976304317},{"_id":"public/categories/只字片语/index.html","hash":"4ca6b6460304455a345e7a9811582f4c422e4466","modified":1498976304317},{"_id":"public/tags/只字片语/index.html","hash":"812a268d539604f64ebf477e4d3abd32e2874c35","modified":1498976304317},{"_id":"public/tags/node-js/index.html","hash":"0d2938c2006d44b0e85d121d15442bb60f1f1d07","modified":1498976304317},{"_id":"public/tags/shadowsocks/index.html","hash":"c94dba59875b2790199dc0642a0eb35e93cf44ec","modified":1498976304317},{"_id":"public/tags/vpn/index.html","hash":"955ab2313c6378adb6a2bbe3b3ebb527fa281b9d","modified":1498976304318},{"_id":"public/tags/digital-ocean/index.html","hash":"4005c87c1db111565f6b2630f16c40c364820c95","modified":1498976304318},{"_id":"public/tags/express/index.html","hash":"5b0ce830f51786f42f626657b9e893387d12e7bd","modified":1498976304318},{"_id":"public/tags/jwt/index.html","hash":"9493827c60ae369c5aff462afb11b4471578ab1c","modified":1498976304318},{"_id":"public/tags/apidoc/index.html","hash":"a124b565a6102d7e4b3bdfcc9e4154ce34254284","modified":1498976304318},{"_id":"public/archives/2016/index.html","hash":"cb9b969d71ce8c5d1791e2bcfd0d6a1e0bbe1f6e","modified":1498976304318},{"_id":"public/archives/2016/11/index.html","hash":"4f4ff829f9c1425c4c6a2db1cf90e16d8a12fe14","modified":1498976304318},{"_id":"public/archives/2017/04/index.html","hash":"30098bae368bb18d5cee4c920d9da66f5ff74762","modified":1498976304318},{"_id":"public/2017/04/03/do-vnp/index.html","hash":"aeb9704a33eed89ab07dce5d577714af7411d6aa","modified":1498976304318},{"_id":"public/2017/01/15/use-apidoc-to-write-api-doc/index.html","hash":"d13b300d4c0faaf8dc4c8bd91dc6e6612b6afd3a","modified":1498976304318},{"_id":"public/2016/11/26/express-jwt/index.html","hash":"c6c2fd88a0277e73d5fe5ba06f1c5c507a91b565","modified":1498976304318},{"_id":"public/images/avatar.jpg","hash":"a1e3e7d859ff0abddbfdd11d9ad196005c2f2c21","modified":1498976304323},{"_id":"public/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1498976304330}],"Category":[{"name":"工具","_id":"cj4m9kazj000h1cwk30m129j0"},{"name":"工具类","_id":"cj4m9kcrk000j1cwkr0vuz2cu"},{"name":"node.js","_id":"cj4m9l0i4000l1cwks7dt0hpw"},{"name":"只字片语","_id":"cj4m9lgvi000n1cwkfs2wt0sc"}],"Data":[],"Page":[],"Post":[{"title":"利用digital ocean轻松翻墙","date":"2017-04-03T05:53:00.000Z","_content":"> 没错，就是教你怎么翻墙，去你妹的防火墙！去你妹的审核不通过！\n\n# digital ocean注册账号\n首先到[digital ocean](https://www.digitalocean.com/)去注册一个帐号。或者[点击这里](https://m.do.co/c/1b83177d2929)使用我的邀请链接进入官网注册帐号，这样子你就有$10的优惠卷。\n\n注册的过程中，需要缴纳$5的“入会费”。网上很多教程几乎都会跟你说不要绑定信用卡，而使用paypal的缴费。[点击这里](https://www.paypal.com/cn/home)进入paypal的中文网。\n\n注册账号这里就不详说了，弄得时候没想过要记录下来，就没截图什么的。而且网上也有很多教程。\n\n# 开启主机\n\n点击Create Droplets建立主机。这时候会看到选择主机的界面。\n\n## 选择镜像\n\n这个选择是看个人爱好的，我选的是ubuntu 16.04 x64。\n\n![选择镜像](http://upload-images.jianshu.io/upload_images/1626912-f97c0fff8cfea29f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 选择套餐\n\n因为我只是需要搭建一个shadowsocks/vpn服务，所以5刀的套餐对我来说已经足够了。\n\n![选择套餐](http://upload-images.jianshu.io/upload_images/1626912-82dd56f4ce7a48c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 是否添加储存\n\n选择不加存储就行了。\n\n![是否添加储存](http://upload-images.jianshu.io/upload_images/1626912-ddfc8d657540a7db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 选择机房\n\n听说是要根据你本地的网络的运营商来选的？详细的还是要去网上找一下答案。不过网上也有说纽约或者三藩市的会比较好，我本人选的是三藩市的机房。\n\n![机房的选择](http://upload-images.jianshu.io/upload_images/1626912-3533d673cf1895f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 其他选项\n\n其他的，我基本上就是默认的。如果考虑到安全什么的，可以尝试加个ssh keys?\n\n![others](http://upload-images.jianshu.io/upload_images/1626912-824b1f0348f5d768.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 点击创建，开启主机\n\n然后点击`create`按钮提交，就会看到主机创建成功了。开启主机，约过了一分钟左右，我的注册邮件里就收到了一封邮件：\n\n![](http://upload-images.jianshu.io/upload_images/1626912-64e19ae0461d9399.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# 设置主机\n\n根据邮件的内容，我拿到我的主机的IP地址，用户名以及密码。接下来，就是连接到这台主机去设置vps或者shadowsocks（下文简称ss）了。我个人比较推荐的是ss。\nvps是全局代理，开启了之后访问百度等国内的网站都要跑一遍三藩市，好慢...而ss就稍微智能一点。\n\n## 连接到主机\n\n一般来讲，使用命令行ssh到主机是比较方便的，不过digital ocean也在网页页面提供了操作界面。\n\n\n### 登录\n\n```sh\n$ ssh root@xxx.xxx.xxx.xxx\n```\n\n- xxx.xxx.xxx.xxx: 主机的ip地址\n\n输入帐号密码（邮件里边给的）。第一次登录的时候，需要我们更换密码。\n\n## shadowsocks\n\n### 安装ss\n\n安装pip\n\n```sh\n$ sudo apt-get install python-pip\n```\n\n安装ss\n\n```sh\n$ pip install ss\n```\n\n如果安装过程出现一下报错（我就是...）：\n```sh\n➜  ~ pip install virtualenv\nTraceback (most recent call last):\n  File \"/usr/bin/pip\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/lib/python3.4/site-packages/pip/__init__.py\", line 215, in main\n    locale.setlocale(locale.LC_ALL, '')\n  File \"/usr/lib64/python3.4/locale.py\", line 592, in setlocale\n    return _setlocale(category, locale)\nlocale.Error: unsupported locale setting\n```\n别慌，更新一下pip就行了\n\n```sh\n$ sudo pip install --upgrade pip\n```\n\n### 配置ss\n```sh\n$ sudo vim /etc/ss.json//这里的json文件是自己创建的，不是系统自带\n```\n\n配置文件的内容大致如下：\n```json\n{\n  \"server\":\"服务器的ip\",\n  \"server_port\":\"ss服务的端口\",\n  \"local_address\":\"127.0.0.1\",\n  \"local_port\":1080,\n  \"password\":\"密码\",\n  \"timeout\":300,\n  \"method\":\"aes-256-cfb\",\n  \"fast_open\":false\n}\n```\n\n### 启动ss客户端\n\n前两步很简单，可是有人就纳闷了安装好了不知道怎么用，其实可以用sslocal -help 来查看帮助就知道了\n \n```sh\nsslocal -c /etc/ss.json\n```\n\n这样ss，就基本搭建完毕了。\n\n### 设置开机启动\n\n设置开机启动是为了以防我们主机人为或者其他不可描述的因素而关机/宕机了，不需要再次连上去启动。\n```sh\n$ sudo vi /etc/rc.local\n```\n\n编辑`rc.local`，在末尾加上：\n\n```md\n/usr/local/bin/ssserver -c /etc/ss.json -d start\n```\n\n完成！接下来就是windows下安装shadowsocks，填写代理ip地址，账户，密码，然后启动就行了。\n\n\n![ss设置](http://upload-images.jianshu.io/upload_images/1626912-54a0f96665a84f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n什么，你用mac/linux?\n\n## vps\n\n这个教程挺多的，这里不说了（我真的很懒）。\n\n很多都是通过pptpd来搭建，不过如果你嫌麻烦的话，可以直接用一个[github上边写好的脚本](https://github.com/viljoviitanen/setup-simple-pptp-vpn)。运行一下脚本，就基本构建成功了。不过需要到设置文件里边修改一下端口跟密码。\n\n```sh\n# 获取远程脚本文件\n$ wget https://raw.github.com/viljoviitanen/setup-simple-pptp-vpn/master/setup.sh\n\n# 运行脚本\n$ sudo sh setup.sh\n\n# 修改配置文件\n$ sudo vim /etc/ppp/chap-secrets\n```\n\n配置文件大概如下：\n\n```\n#/etc/ppp/chap-secrets\n# Secrets for authentication using CHAP\n# client server secret IP addresses\nvpn pptpd fAj-JwC-rLu *\n```\n\n字段分别表示：\n\n- client：vpn （用户名） \n- server：pptpd（服务器类型）\n- secret：fAj-JwC-rLu（密码）      \n- IP addresses：* （*代表允许所有的ip链接）\n\n最后重启一下pptpd服务：\n\n```sh\n$ service pptpd restart\n```\n\n### 客户端的设置\n\n这里就拿win10系统为例：\n\n到设置里边，选择VPN > 添加VPN连接 > 填写对应的信息，就可以了。\n\n\n![win10网络](http://upload-images.jianshu.io/upload_images/1626912-bfe3539e946abae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","source":"_posts/do-vnp.md","raw":"---\ntitle: 利用digital ocean轻松翻墙\ndate: 2017-04-03 13:53:00\ncategories: 工具类\ntags:\n  - digital ocean\n  - shadowsocks\n  - vpn\n---\n> 没错，就是教你怎么翻墙，去你妹的防火墙！去你妹的审核不通过！\n\n# digital ocean注册账号\n首先到[digital ocean](https://www.digitalocean.com/)去注册一个帐号。或者[点击这里](https://m.do.co/c/1b83177d2929)使用我的邀请链接进入官网注册帐号，这样子你就有$10的优惠卷。\n\n注册的过程中，需要缴纳$5的“入会费”。网上很多教程几乎都会跟你说不要绑定信用卡，而使用paypal的缴费。[点击这里](https://www.paypal.com/cn/home)进入paypal的中文网。\n\n注册账号这里就不详说了，弄得时候没想过要记录下来，就没截图什么的。而且网上也有很多教程。\n\n# 开启主机\n\n点击Create Droplets建立主机。这时候会看到选择主机的界面。\n\n## 选择镜像\n\n这个选择是看个人爱好的，我选的是ubuntu 16.04 x64。\n\n![选择镜像](http://upload-images.jianshu.io/upload_images/1626912-f97c0fff8cfea29f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 选择套餐\n\n因为我只是需要搭建一个shadowsocks/vpn服务，所以5刀的套餐对我来说已经足够了。\n\n![选择套餐](http://upload-images.jianshu.io/upload_images/1626912-82dd56f4ce7a48c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 是否添加储存\n\n选择不加存储就行了。\n\n![是否添加储存](http://upload-images.jianshu.io/upload_images/1626912-ddfc8d657540a7db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 选择机房\n\n听说是要根据你本地的网络的运营商来选的？详细的还是要去网上找一下答案。不过网上也有说纽约或者三藩市的会比较好，我本人选的是三藩市的机房。\n\n![机房的选择](http://upload-images.jianshu.io/upload_images/1626912-3533d673cf1895f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 其他选项\n\n其他的，我基本上就是默认的。如果考虑到安全什么的，可以尝试加个ssh keys?\n\n![others](http://upload-images.jianshu.io/upload_images/1626912-824b1f0348f5d768.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 点击创建，开启主机\n\n然后点击`create`按钮提交，就会看到主机创建成功了。开启主机，约过了一分钟左右，我的注册邮件里就收到了一封邮件：\n\n![](http://upload-images.jianshu.io/upload_images/1626912-64e19ae0461d9399.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# 设置主机\n\n根据邮件的内容，我拿到我的主机的IP地址，用户名以及密码。接下来，就是连接到这台主机去设置vps或者shadowsocks（下文简称ss）了。我个人比较推荐的是ss。\nvps是全局代理，开启了之后访问百度等国内的网站都要跑一遍三藩市，好慢...而ss就稍微智能一点。\n\n## 连接到主机\n\n一般来讲，使用命令行ssh到主机是比较方便的，不过digital ocean也在网页页面提供了操作界面。\n\n\n### 登录\n\n```sh\n$ ssh root@xxx.xxx.xxx.xxx\n```\n\n- xxx.xxx.xxx.xxx: 主机的ip地址\n\n输入帐号密码（邮件里边给的）。第一次登录的时候，需要我们更换密码。\n\n## shadowsocks\n\n### 安装ss\n\n安装pip\n\n```sh\n$ sudo apt-get install python-pip\n```\n\n安装ss\n\n```sh\n$ pip install ss\n```\n\n如果安装过程出现一下报错（我就是...）：\n```sh\n➜  ~ pip install virtualenv\nTraceback (most recent call last):\n  File \"/usr/bin/pip\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/lib/python3.4/site-packages/pip/__init__.py\", line 215, in main\n    locale.setlocale(locale.LC_ALL, '')\n  File \"/usr/lib64/python3.4/locale.py\", line 592, in setlocale\n    return _setlocale(category, locale)\nlocale.Error: unsupported locale setting\n```\n别慌，更新一下pip就行了\n\n```sh\n$ sudo pip install --upgrade pip\n```\n\n### 配置ss\n```sh\n$ sudo vim /etc/ss.json//这里的json文件是自己创建的，不是系统自带\n```\n\n配置文件的内容大致如下：\n```json\n{\n  \"server\":\"服务器的ip\",\n  \"server_port\":\"ss服务的端口\",\n  \"local_address\":\"127.0.0.1\",\n  \"local_port\":1080,\n  \"password\":\"密码\",\n  \"timeout\":300,\n  \"method\":\"aes-256-cfb\",\n  \"fast_open\":false\n}\n```\n\n### 启动ss客户端\n\n前两步很简单，可是有人就纳闷了安装好了不知道怎么用，其实可以用sslocal -help 来查看帮助就知道了\n \n```sh\nsslocal -c /etc/ss.json\n```\n\n这样ss，就基本搭建完毕了。\n\n### 设置开机启动\n\n设置开机启动是为了以防我们主机人为或者其他不可描述的因素而关机/宕机了，不需要再次连上去启动。\n```sh\n$ sudo vi /etc/rc.local\n```\n\n编辑`rc.local`，在末尾加上：\n\n```md\n/usr/local/bin/ssserver -c /etc/ss.json -d start\n```\n\n完成！接下来就是windows下安装shadowsocks，填写代理ip地址，账户，密码，然后启动就行了。\n\n\n![ss设置](http://upload-images.jianshu.io/upload_images/1626912-54a0f96665a84f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n什么，你用mac/linux?\n\n## vps\n\n这个教程挺多的，这里不说了（我真的很懒）。\n\n很多都是通过pptpd来搭建，不过如果你嫌麻烦的话，可以直接用一个[github上边写好的脚本](https://github.com/viljoviitanen/setup-simple-pptp-vpn)。运行一下脚本，就基本构建成功了。不过需要到设置文件里边修改一下端口跟密码。\n\n```sh\n# 获取远程脚本文件\n$ wget https://raw.github.com/viljoviitanen/setup-simple-pptp-vpn/master/setup.sh\n\n# 运行脚本\n$ sudo sh setup.sh\n\n# 修改配置文件\n$ sudo vim /etc/ppp/chap-secrets\n```\n\n配置文件大概如下：\n\n```\n#/etc/ppp/chap-secrets\n# Secrets for authentication using CHAP\n# client server secret IP addresses\nvpn pptpd fAj-JwC-rLu *\n```\n\n字段分别表示：\n\n- client：vpn （用户名） \n- server：pptpd（服务器类型）\n- secret：fAj-JwC-rLu（密码）      \n- IP addresses：* （*代表允许所有的ip链接）\n\n最后重启一下pptpd服务：\n\n```sh\n$ service pptpd restart\n```\n\n### 客户端的设置\n\n这里就拿win10系统为例：\n\n到设置里边，选择VPN > 添加VPN连接 > 填写对应的信息，就可以了。\n\n\n![win10网络](http://upload-images.jianshu.io/upload_images/1626912-bfe3539e946abae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","slug":"do-vnp","published":1,"updated":"2017-07-02T05:16:09.237Z","_id":"cj4m5g4v900006cwk6ut7tggh","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>没错，就是教你怎么翻墙，去你妹的防火墙！去你妹的审核不通过！</p>\n</blockquote>\n<h1 id=\"digital-ocean注册账号\"><a href=\"#digital-ocean注册账号\" class=\"headerlink\" title=\"digital ocean注册账号\"></a>digital ocean注册账号</h1><p>首先到<a href=\"https://www.digitalocean.com/\" target=\"_blank\" rel=\"external\">digital ocean</a>去注册一个帐号。或者<a href=\"https://m.do.co/c/1b83177d2929\" target=\"_blank\" rel=\"external\">点击这里</a>使用我的邀请链接进入官网注册帐号，这样子你就有$10的优惠卷。</p>\n<p>注册的过程中，需要缴纳$5的“入会费”。网上很多教程几乎都会跟你说不要绑定信用卡，而使用paypal的缴费。<a href=\"https://www.paypal.com/cn/home\" target=\"_blank\" rel=\"external\">点击这里</a>进入paypal的中文网。</p>\n<p>注册账号这里就不详说了，弄得时候没想过要记录下来，就没截图什么的。而且网上也有很多教程。</p>\n<h1 id=\"开启主机\"><a href=\"#开启主机\" class=\"headerlink\" title=\"开启主机\"></a>开启主机</h1><p>点击Create Droplets建立主机。这时候会看到选择主机的界面。</p>\n<h2 id=\"选择镜像\"><a href=\"#选择镜像\" class=\"headerlink\" title=\"选择镜像\"></a>选择镜像</h2><p>这个选择是看个人爱好的，我选的是ubuntu 16.04 x64。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-f97c0fff8cfea29f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选择镜像\"></p>\n<h2 id=\"选择套餐\"><a href=\"#选择套餐\" class=\"headerlink\" title=\"选择套餐\"></a>选择套餐</h2><p>因为我只是需要搭建一个shadowsocks/vpn服务，所以5刀的套餐对我来说已经足够了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-82dd56f4ce7a48c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选择套餐\"></p>\n<h2 id=\"是否添加储存\"><a href=\"#是否添加储存\" class=\"headerlink\" title=\"是否添加储存\"></a>是否添加储存</h2><p>选择不加存储就行了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-ddfc8d657540a7db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"是否添加储存\"></p>\n<h2 id=\"选择机房\"><a href=\"#选择机房\" class=\"headerlink\" title=\"选择机房\"></a>选择机房</h2><p>听说是要根据你本地的网络的运营商来选的？详细的还是要去网上找一下答案。不过网上也有说纽约或者三藩市的会比较好，我本人选的是三藩市的机房。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-3533d673cf1895f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"机房的选择\"></p>\n<h2 id=\"其他选项\"><a href=\"#其他选项\" class=\"headerlink\" title=\"其他选项\"></a>其他选项</h2><p>其他的，我基本上就是默认的。如果考虑到安全什么的，可以尝试加个ssh keys?</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-824b1f0348f5d768.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"others\"></p>\n<h2 id=\"点击创建，开启主机\"><a href=\"#点击创建，开启主机\" class=\"headerlink\" title=\"点击创建，开启主机\"></a>点击创建，开启主机</h2><p>然后点击<code>create</code>按钮提交，就会看到主机创建成功了。开启主机，约过了一分钟左右，我的注册邮件里就收到了一封邮件：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-64e19ae0461d9399.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h1 id=\"设置主机\"><a href=\"#设置主机\" class=\"headerlink\" title=\"设置主机\"></a>设置主机</h1><p>根据邮件的内容，我拿到我的主机的IP地址，用户名以及密码。接下来，就是连接到这台主机去设置vps或者shadowsocks（下文简称ss）了。我个人比较推荐的是ss。<br>vps是全局代理，开启了之后访问百度等国内的网站都要跑一遍三藩市，好慢…而ss就稍微智能一点。</p>\n<h2 id=\"连接到主机\"><a href=\"#连接到主机\" class=\"headerlink\" title=\"连接到主机\"></a>连接到主机</h2><p>一般来讲，使用命令行ssh到主机是比较方便的，不过digital ocean也在网页页面提供了操作界面。</p>\n<h3 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh root@xxx.xxx.xxx.xxx</div></pre></td></tr></table></figure>\n<ul>\n<li>xxx.xxx.xxx.xxx: 主机的ip地址</li>\n</ul>\n<p>输入帐号密码（邮件里边给的）。第一次登录的时候，需要我们更换密码。</p>\n<h2 id=\"shadowsocks\"><a href=\"#shadowsocks\" class=\"headerlink\" title=\"shadowsocks\"></a>shadowsocks</h2><h3 id=\"安装ss\"><a href=\"#安装ss\" class=\"headerlink\" title=\"安装ss\"></a>安装ss</h3><p>安装pip</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install python-pip</div></pre></td></tr></table></figure>\n<p>安装ss</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ pip install ss</div></pre></td></tr></table></figure>\n<p>如果安装过程出现一下报错（我就是…）：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ pip install virtualenv</div><div class=\"line\">Traceback (most recent call last):</div><div class=\"line\">  File <span class=\"string\">\"/usr/bin/pip\"</span>, line 11, <span class=\"keyword\">in</span> &lt;module&gt;</div><div class=\"line\">    sys.exit(main())</div><div class=\"line\">  File <span class=\"string\">\"/usr/lib/python3.4/site-packages/pip/__init__.py\"</span>, line 215, <span class=\"keyword\">in</span> main</div><div class=\"line\">    locale.setlocale(locale.LC_ALL, <span class=\"string\">''</span>)</div><div class=\"line\">  File <span class=\"string\">\"/usr/lib64/python3.4/locale.py\"</span>, line 592, <span class=\"keyword\">in</span> setlocale</div><div class=\"line\">    <span class=\"built_in\">return</span> _setlocale(category, locale)</div><div class=\"line\">locale.Error: unsupported locale setting</div></pre></td></tr></table></figure></p>\n<p>别慌，更新一下pip就行了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo pip install --upgrade pip</div></pre></td></tr></table></figure>\n<h3 id=\"配置ss\"><a href=\"#配置ss\" class=\"headerlink\" title=\"配置ss\"></a>配置ss</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vim /etc/ss.json//这里的json文件是自己创建的，不是系统自带</div></pre></td></tr></table></figure>\n<p>配置文件的内容大致如下：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"server\"</span>:<span class=\"string\">\"服务器的ip\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"server_port\"</span>:<span class=\"string\">\"ss服务的端口\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</div><div class=\"line\">  <span class=\"attr\">\"password\"</span>:<span class=\"string\">\"密码\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"timeout\"</span>:<span class=\"number\">300</span>,</div><div class=\"line\">  <span class=\"attr\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"fast_open\"</span>:<span class=\"literal\">false</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动ss客户端\"><a href=\"#启动ss客户端\" class=\"headerlink\" title=\"启动ss客户端\"></a>启动ss客户端</h3><p>前两步很简单，可是有人就纳闷了安装好了不知道怎么用，其实可以用sslocal -help 来查看帮助就知道了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sslocal -c /etc/ss.json</div></pre></td></tr></table></figure>\n<p>这样ss，就基本搭建完毕了。</p>\n<h3 id=\"设置开机启动\"><a href=\"#设置开机启动\" class=\"headerlink\" title=\"设置开机启动\"></a>设置开机启动</h3><p>设置开机启动是为了以防我们主机人为或者其他不可描述的因素而关机/宕机了，不需要再次连上去启动。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi /etc/rc.local</div></pre></td></tr></table></figure></p>\n<p>编辑<code>rc.local</code>，在末尾加上：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/bin/ssserver -c /etc/ss.json -d start</div></pre></td></tr></table></figure>\n<p>完成！接下来就是windows下安装shadowsocks，填写代理ip地址，账户，密码，然后启动就行了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-54a0f96665a84f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ss设置\"></p>\n<p>什么，你用mac/linux?</p>\n<h2 id=\"vps\"><a href=\"#vps\" class=\"headerlink\" title=\"vps\"></a>vps</h2><p>这个教程挺多的，这里不说了（我真的很懒）。</p>\n<p>很多都是通过pptpd来搭建，不过如果你嫌麻烦的话，可以直接用一个<a href=\"https://github.com/viljoviitanen/setup-simple-pptp-vpn\" target=\"_blank\" rel=\"external\">github上边写好的脚本</a>。运行一下脚本，就基本构建成功了。不过需要到设置文件里边修改一下端口跟密码。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 获取远程脚本文件</span></div><div class=\"line\">$ wget https://raw.github.com/viljoviitanen/setup-simple-pptp-vpn/master/setup.sh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 运行脚本</span></div><div class=\"line\">$ sudo sh setup.sh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 修改配置文件</span></div><div class=\"line\">$ sudo vim /etc/ppp/chap-secrets</div></pre></td></tr></table></figure>\n<p>配置文件大概如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#/etc/ppp/chap-secrets</div><div class=\"line\"># Secrets for authentication using CHAP</div><div class=\"line\"># client server secret IP addresses</div><div class=\"line\">vpn pptpd fAj-JwC-rLu *</div></pre></td></tr></table></figure>\n<p>字段分别表示：</p>\n<ul>\n<li>client：vpn （用户名） </li>\n<li>server：pptpd（服务器类型）</li>\n<li>secret：fAj-JwC-rLu（密码）      </li>\n<li>IP addresses：<em> （</em>代表允许所有的ip链接）</li>\n</ul>\n<p>最后重启一下pptpd服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ service pptpd restart</div></pre></td></tr></table></figure>\n<h3 id=\"客户端的设置\"><a href=\"#客户端的设置\" class=\"headerlink\" title=\"客户端的设置\"></a>客户端的设置</h3><p>这里就拿win10系统为例：</p>\n<p>到设置里边，选择VPN &gt; 添加VPN连接 &gt; 填写对应的信息，就可以了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-bfe3539e946abae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"win10网络\"></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>没错，就是教你怎么翻墙，去你妹的防火墙！去你妹的审核不通过！</p>\n</blockquote>\n<h1 id=\"digital-ocean注册账号\"><a href=\"#digital-ocean注册账号\" class=\"headerlink\" title=\"digital ocean注册账号\"></a>digital ocean注册账号</h1><p>首先到<a href=\"https://www.digitalocean.com/\" target=\"_blank\" rel=\"external\">digital ocean</a>去注册一个帐号。或者<a href=\"https://m.do.co/c/1b83177d2929\" target=\"_blank\" rel=\"external\">点击这里</a>使用我的邀请链接进入官网注册帐号，这样子你就有$10的优惠卷。</p>\n<p>注册的过程中，需要缴纳$5的“入会费”。网上很多教程几乎都会跟你说不要绑定信用卡，而使用paypal的缴费。<a href=\"https://www.paypal.com/cn/home\" target=\"_blank\" rel=\"external\">点击这里</a>进入paypal的中文网。</p>\n<p>注册账号这里就不详说了，弄得时候没想过要记录下来，就没截图什么的。而且网上也有很多教程。</p>\n<h1 id=\"开启主机\"><a href=\"#开启主机\" class=\"headerlink\" title=\"开启主机\"></a>开启主机</h1><p>点击Create Droplets建立主机。这时候会看到选择主机的界面。</p>\n<h2 id=\"选择镜像\"><a href=\"#选择镜像\" class=\"headerlink\" title=\"选择镜像\"></a>选择镜像</h2><p>这个选择是看个人爱好的，我选的是ubuntu 16.04 x64。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-f97c0fff8cfea29f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选择镜像\"></p>\n<h2 id=\"选择套餐\"><a href=\"#选择套餐\" class=\"headerlink\" title=\"选择套餐\"></a>选择套餐</h2><p>因为我只是需要搭建一个shadowsocks/vpn服务，所以5刀的套餐对我来说已经足够了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-82dd56f4ce7a48c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选择套餐\"></p>\n<h2 id=\"是否添加储存\"><a href=\"#是否添加储存\" class=\"headerlink\" title=\"是否添加储存\"></a>是否添加储存</h2><p>选择不加存储就行了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-ddfc8d657540a7db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"是否添加储存\"></p>\n<h2 id=\"选择机房\"><a href=\"#选择机房\" class=\"headerlink\" title=\"选择机房\"></a>选择机房</h2><p>听说是要根据你本地的网络的运营商来选的？详细的还是要去网上找一下答案。不过网上也有说纽约或者三藩市的会比较好，我本人选的是三藩市的机房。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-3533d673cf1895f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"机房的选择\"></p>\n<h2 id=\"其他选项\"><a href=\"#其他选项\" class=\"headerlink\" title=\"其他选项\"></a>其他选项</h2><p>其他的，我基本上就是默认的。如果考虑到安全什么的，可以尝试加个ssh keys?</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-824b1f0348f5d768.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"others\"></p>\n<h2 id=\"点击创建，开启主机\"><a href=\"#点击创建，开启主机\" class=\"headerlink\" title=\"点击创建，开启主机\"></a>点击创建，开启主机</h2><p>然后点击<code>create</code>按钮提交，就会看到主机创建成功了。开启主机，约过了一分钟左右，我的注册邮件里就收到了一封邮件：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-64e19ae0461d9399.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h1 id=\"设置主机\"><a href=\"#设置主机\" class=\"headerlink\" title=\"设置主机\"></a>设置主机</h1><p>根据邮件的内容，我拿到我的主机的IP地址，用户名以及密码。接下来，就是连接到这台主机去设置vps或者shadowsocks（下文简称ss）了。我个人比较推荐的是ss。<br>vps是全局代理，开启了之后访问百度等国内的网站都要跑一遍三藩市，好慢…而ss就稍微智能一点。</p>\n<h2 id=\"连接到主机\"><a href=\"#连接到主机\" class=\"headerlink\" title=\"连接到主机\"></a>连接到主机</h2><p>一般来讲，使用命令行ssh到主机是比较方便的，不过digital ocean也在网页页面提供了操作界面。</p>\n<h3 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh root@xxx.xxx.xxx.xxx</div></pre></td></tr></table></figure>\n<ul>\n<li>xxx.xxx.xxx.xxx: 主机的ip地址</li>\n</ul>\n<p>输入帐号密码（邮件里边给的）。第一次登录的时候，需要我们更换密码。</p>\n<h2 id=\"shadowsocks\"><a href=\"#shadowsocks\" class=\"headerlink\" title=\"shadowsocks\"></a>shadowsocks</h2><h3 id=\"安装ss\"><a href=\"#安装ss\" class=\"headerlink\" title=\"安装ss\"></a>安装ss</h3><p>安装pip</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install python-pip</div></pre></td></tr></table></figure>\n<p>安装ss</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ pip install ss</div></pre></td></tr></table></figure>\n<p>如果安装过程出现一下报错（我就是…）：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ pip install virtualenv</div><div class=\"line\">Traceback (most recent call last):</div><div class=\"line\">  File <span class=\"string\">\"/usr/bin/pip\"</span>, line 11, <span class=\"keyword\">in</span> &lt;module&gt;</div><div class=\"line\">    sys.exit(main())</div><div class=\"line\">  File <span class=\"string\">\"/usr/lib/python3.4/site-packages/pip/__init__.py\"</span>, line 215, <span class=\"keyword\">in</span> main</div><div class=\"line\">    locale.setlocale(locale.LC_ALL, <span class=\"string\">''</span>)</div><div class=\"line\">  File <span class=\"string\">\"/usr/lib64/python3.4/locale.py\"</span>, line 592, <span class=\"keyword\">in</span> setlocale</div><div class=\"line\">    <span class=\"built_in\">return</span> _setlocale(category, locale)</div><div class=\"line\">locale.Error: unsupported locale setting</div></pre></td></tr></table></figure></p>\n<p>别慌，更新一下pip就行了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo pip install --upgrade pip</div></pre></td></tr></table></figure>\n<h3 id=\"配置ss\"><a href=\"#配置ss\" class=\"headerlink\" title=\"配置ss\"></a>配置ss</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vim /etc/ss.json//这里的json文件是自己创建的，不是系统自带</div></pre></td></tr></table></figure>\n<p>配置文件的内容大致如下：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"server\"</span>:<span class=\"string\">\"服务器的ip\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"server_port\"</span>:<span class=\"string\">\"ss服务的端口\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</div><div class=\"line\">  <span class=\"attr\">\"password\"</span>:<span class=\"string\">\"密码\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"timeout\"</span>:<span class=\"number\">300</span>,</div><div class=\"line\">  <span class=\"attr\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"fast_open\"</span>:<span class=\"literal\">false</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动ss客户端\"><a href=\"#启动ss客户端\" class=\"headerlink\" title=\"启动ss客户端\"></a>启动ss客户端</h3><p>前两步很简单，可是有人就纳闷了安装好了不知道怎么用，其实可以用sslocal -help 来查看帮助就知道了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sslocal -c /etc/ss.json</div></pre></td></tr></table></figure>\n<p>这样ss，就基本搭建完毕了。</p>\n<h3 id=\"设置开机启动\"><a href=\"#设置开机启动\" class=\"headerlink\" title=\"设置开机启动\"></a>设置开机启动</h3><p>设置开机启动是为了以防我们主机人为或者其他不可描述的因素而关机/宕机了，不需要再次连上去启动。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi /etc/rc.local</div></pre></td></tr></table></figure></p>\n<p>编辑<code>rc.local</code>，在末尾加上：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/bin/ssserver -c /etc/ss.json -d start</div></pre></td></tr></table></figure>\n<p>完成！接下来就是windows下安装shadowsocks，填写代理ip地址，账户，密码，然后启动就行了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-54a0f96665a84f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ss设置\"></p>\n<p>什么，你用mac/linux?</p>\n<h2 id=\"vps\"><a href=\"#vps\" class=\"headerlink\" title=\"vps\"></a>vps</h2><p>这个教程挺多的，这里不说了（我真的很懒）。</p>\n<p>很多都是通过pptpd来搭建，不过如果你嫌麻烦的话，可以直接用一个<a href=\"https://github.com/viljoviitanen/setup-simple-pptp-vpn\" target=\"_blank\" rel=\"external\">github上边写好的脚本</a>。运行一下脚本，就基本构建成功了。不过需要到设置文件里边修改一下端口跟密码。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 获取远程脚本文件</span></div><div class=\"line\">$ wget https://raw.github.com/viljoviitanen/setup-simple-pptp-vpn/master/setup.sh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 运行脚本</span></div><div class=\"line\">$ sudo sh setup.sh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 修改配置文件</span></div><div class=\"line\">$ sudo vim /etc/ppp/chap-secrets</div></pre></td></tr></table></figure>\n<p>配置文件大概如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#/etc/ppp/chap-secrets</div><div class=\"line\"># Secrets for authentication using CHAP</div><div class=\"line\"># client server secret IP addresses</div><div class=\"line\">vpn pptpd fAj-JwC-rLu *</div></pre></td></tr></table></figure>\n<p>字段分别表示：</p>\n<ul>\n<li>client：vpn （用户名） </li>\n<li>server：pptpd（服务器类型）</li>\n<li>secret：fAj-JwC-rLu（密码）      </li>\n<li>IP addresses：<em> （</em>代表允许所有的ip链接）</li>\n</ul>\n<p>最后重启一下pptpd服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ service pptpd restart</div></pre></td></tr></table></figure>\n<h3 id=\"客户端的设置\"><a href=\"#客户端的设置\" class=\"headerlink\" title=\"客户端的设置\"></a>客户端的设置</h3><p>这里就拿win10系统为例：</p>\n<p>到设置里边，选择VPN &gt; 添加VPN连接 &gt; 填写对应的信息，就可以了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-bfe3539e946abae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"win10网络\"></p>\n"},{"title":"我的博客","date":"2017-07-01T10:00:00.000Z","_content":"# Q：为什么要自己搭建一个博客网站？\n\n一方面是觉得自己搭建博客是一件挺好玩的事情，为此我还特装逼的去购买了一个域名。可惜的是解析老是不成功，后来才知道原来是因为我没有实名验证，万网那边就一直视我的域名为不安全域名，所以就一直解析不成功...哎呀，好气啊！\n\n另外一方面，我所在的这家公司，在伟大的兴哥哥的带领下，以前一直都是差不多一个月写一篇技术文章的习惯的。后来因为业务上的工作越来越多了，慢慢的也就淡忘了。我也只是偶尔会写一两篇记录一下最近遇到的难题的解决方法，或者记录一些自己学到/用过的技术。觉得这件事情本身就挺好的，不想荒废。\n\n# Q：写出来的文章质量怎么样？\n\n由于本人的知识水平有限，或许会有许多错漏的地方，还望各位多多包涵，多多指正。\n\n# Q：这里是不是只写技术类的文章？\n\n这个要看我的心情，万一哪天我矫情了呢？0.0\n\n# Q：为什么没有评论？\n\n这个或许是暂时的，也或者是永久的。因为这段时间真的很忙，加入评论的功能，我还需要去调研一下方案。敬请期待吧。\n\n# Q：那我特么发现了文章的错漏，该怎么告诉你？\n\n这个就劳烦您给我发一封邮件？表明那篇文章，那个段落？（天啊！我觉得没有人会那么傻！）当然，也很难免我会在简书上同时发布文章，来刷流量。您可以移步简书关注我也行！\n\n# Q：那为什么不只在简书上写就好了？\n\n呵呵。","source":"_posts/something-to-talk.md","raw":"---\ntitle: 我的博客\ndate: 2017-07-01 18:00:00\ncategories: 只字片语\ntags: 只字片语\n---\n# Q：为什么要自己搭建一个博客网站？\n\n一方面是觉得自己搭建博客是一件挺好玩的事情，为此我还特装逼的去购买了一个域名。可惜的是解析老是不成功，后来才知道原来是因为我没有实名验证，万网那边就一直视我的域名为不安全域名，所以就一直解析不成功...哎呀，好气啊！\n\n另外一方面，我所在的这家公司，在伟大的兴哥哥的带领下，以前一直都是差不多一个月写一篇技术文章的习惯的。后来因为业务上的工作越来越多了，慢慢的也就淡忘了。我也只是偶尔会写一两篇记录一下最近遇到的难题的解决方法，或者记录一些自己学到/用过的技术。觉得这件事情本身就挺好的，不想荒废。\n\n# Q：写出来的文章质量怎么样？\n\n由于本人的知识水平有限，或许会有许多错漏的地方，还望各位多多包涵，多多指正。\n\n# Q：这里是不是只写技术类的文章？\n\n这个要看我的心情，万一哪天我矫情了呢？0.0\n\n# Q：为什么没有评论？\n\n这个或许是暂时的，也或者是永久的。因为这段时间真的很忙，加入评论的功能，我还需要去调研一下方案。敬请期待吧。\n\n# Q：那我特么发现了文章的错漏，该怎么告诉你？\n\n这个就劳烦您给我发一封邮件？表明那篇文章，那个段落？（天啊！我觉得没有人会那么傻！）当然，也很难免我会在简书上同时发布文章，来刷流量。您可以移步简书关注我也行！\n\n# Q：那为什么不只在简书上写就好了？\n\n呵呵。","slug":"something-to-talk","published":1,"updated":"2017-07-02T05:30:40.801Z","_id":"cj4m5g4vl00016cwkts05x85a","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Q：为什么要自己搭建一个博客网站？\"><a href=\"#Q：为什么要自己搭建一个博客网站？\" class=\"headerlink\" title=\"Q：为什么要自己搭建一个博客网站？\"></a>Q：为什么要自己搭建一个博客网站？</h1><p>一方面是觉得自己搭建博客是一件挺好玩的事情，为此我还特装逼的去购买了一个域名。可惜的是解析老是不成功，后来才知道原来是因为我没有实名验证，万网那边就一直视我的域名为不安全域名，所以就一直解析不成功…哎呀，好气啊！</p>\n<p>另外一方面，我所在的这家公司，在伟大的兴哥哥的带领下，以前一直都是差不多一个月写一篇技术文章的习惯的。后来因为业务上的工作越来越多了，慢慢的也就淡忘了。我也只是偶尔会写一两篇记录一下最近遇到的难题的解决方法，或者记录一些自己学到/用过的技术。觉得这件事情本身就挺好的，不想荒废。</p>\n<h1 id=\"Q：写出来的文章质量怎么样？\"><a href=\"#Q：写出来的文章质量怎么样？\" class=\"headerlink\" title=\"Q：写出来的文章质量怎么样？\"></a>Q：写出来的文章质量怎么样？</h1><p>由于本人的知识水平有限，或许会有许多错漏的地方，还望各位多多包涵，多多指正。</p>\n<h1 id=\"Q：这里是不是只写技术类的文章？\"><a href=\"#Q：这里是不是只写技术类的文章？\" class=\"headerlink\" title=\"Q：这里是不是只写技术类的文章？\"></a>Q：这里是不是只写技术类的文章？</h1><p>这个要看我的心情，万一哪天我矫情了呢？0.0</p>\n<h1 id=\"Q：为什么没有评论？\"><a href=\"#Q：为什么没有评论？\" class=\"headerlink\" title=\"Q：为什么没有评论？\"></a>Q：为什么没有评论？</h1><p>这个或许是暂时的，也或者是永久的。因为这段时间真的很忙，加入评论的功能，我还需要去调研一下方案。敬请期待吧。</p>\n<h1 id=\"Q：那我特么发现了文章的错漏，该怎么告诉你？\"><a href=\"#Q：那我特么发现了文章的错漏，该怎么告诉你？\" class=\"headerlink\" title=\"Q：那我特么发现了文章的错漏，该怎么告诉你？\"></a>Q：那我特么发现了文章的错漏，该怎么告诉你？</h1><p>这个就劳烦您给我发一封邮件？表明那篇文章，那个段落？（天啊！我觉得没有人会那么傻！）当然，也很难免我会在简书上同时发布文章，来刷流量。您可以移步简书关注我也行！</p>\n<h1 id=\"Q：那为什么不只在简书上写就好了？\"><a href=\"#Q：那为什么不只在简书上写就好了？\" class=\"headerlink\" title=\"Q：那为什么不只在简书上写就好了？\"></a>Q：那为什么不只在简书上写就好了？</h1><p>呵呵。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Q：为什么要自己搭建一个博客网站？\"><a href=\"#Q：为什么要自己搭建一个博客网站？\" class=\"headerlink\" title=\"Q：为什么要自己搭建一个博客网站？\"></a>Q：为什么要自己搭建一个博客网站？</h1><p>一方面是觉得自己搭建博客是一件挺好玩的事情，为此我还特装逼的去购买了一个域名。可惜的是解析老是不成功，后来才知道原来是因为我没有实名验证，万网那边就一直视我的域名为不安全域名，所以就一直解析不成功…哎呀，好气啊！</p>\n<p>另外一方面，我所在的这家公司，在伟大的兴哥哥的带领下，以前一直都是差不多一个月写一篇技术文章的习惯的。后来因为业务上的工作越来越多了，慢慢的也就淡忘了。我也只是偶尔会写一两篇记录一下最近遇到的难题的解决方法，或者记录一些自己学到/用过的技术。觉得这件事情本身就挺好的，不想荒废。</p>\n<h1 id=\"Q：写出来的文章质量怎么样？\"><a href=\"#Q：写出来的文章质量怎么样？\" class=\"headerlink\" title=\"Q：写出来的文章质量怎么样？\"></a>Q：写出来的文章质量怎么样？</h1><p>由于本人的知识水平有限，或许会有许多错漏的地方，还望各位多多包涵，多多指正。</p>\n<h1 id=\"Q：这里是不是只写技术类的文章？\"><a href=\"#Q：这里是不是只写技术类的文章？\" class=\"headerlink\" title=\"Q：这里是不是只写技术类的文章？\"></a>Q：这里是不是只写技术类的文章？</h1><p>这个要看我的心情，万一哪天我矫情了呢？0.0</p>\n<h1 id=\"Q：为什么没有评论？\"><a href=\"#Q：为什么没有评论？\" class=\"headerlink\" title=\"Q：为什么没有评论？\"></a>Q：为什么没有评论？</h1><p>这个或许是暂时的，也或者是永久的。因为这段时间真的很忙，加入评论的功能，我还需要去调研一下方案。敬请期待吧。</p>\n<h1 id=\"Q：那我特么发现了文章的错漏，该怎么告诉你？\"><a href=\"#Q：那我特么发现了文章的错漏，该怎么告诉你？\" class=\"headerlink\" title=\"Q：那我特么发现了文章的错漏，该怎么告诉你？\"></a>Q：那我特么发现了文章的错漏，该怎么告诉你？</h1><p>这个就劳烦您给我发一封邮件？表明那篇文章，那个段落？（天啊！我觉得没有人会那么傻！）当然，也很难免我会在简书上同时发布文章，来刷流量。您可以移步简书关注我也行！</p>\n<h1 id=\"Q：那为什么不只在简书上写就好了？\"><a href=\"#Q：那为什么不只在简书上写就好了？\" class=\"headerlink\" title=\"Q：那为什么不只在简书上写就好了？\"></a>Q：那为什么不只在简书上写就好了？</h1><p>呵呵。</p>\n"},{"title":"express编写JWT中间件","date":"2016-11-26T03:17:00.000Z","_content":"> 最近由于项目需要，学习了一下JWT这种身份验证的方法。在这里做一下总结。\n> 本文主要是做一些总结，参考文章链接：[JSON Web Token - 在Web应用间安全地传递信息](http://blog.leapoahead.com/2015/09/06/understanding-jwt/)\n\n# 什么是JWT\n\nJWT是一种用于双方之间传递安全信息的简洁的、URL安全的表述性声明规范。\n- 简洁(Compact): 可以通过URL，POST参数或者在HTTP header发送，因为数据量小，传输速度也很快;\n- 自包含(Self-contained)：负载中包含了所有用户所需要的信息，避免了多次查询数据库;\n\n## JWT结构简介\n\nJWT结构:\n- `Headers`头部\n- `Payload`负载\n- `Signature`签名\n\n整体结构为:\n`xxxxx.yyyyy.zzzzz`\n\n### Headers\n\n在`headers`中通常包含了两部分: `token`类型和采用的加密算法\n\n```json\n{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n```\n- alg: 算法类型\n- typ: token类型\n\n### Payload\n\n`Token`的第二部分时负载,它包含了`claim`,`Claim`是一些实体(通常指的用户)的状态和额外的元数据,有三种类型的`claim`: `reserved`,`public`和`private`.\n\n- `Reserved claims`:这些`claim`是JWT预先定义的,在JWT中并不会强制使用它们,而是推荐使用,常用的有:\n- iss(签发者)\n- exp(过期时间戳)\n- sub(面向的用户)\n- aud(接收方)\n- iat(签发时间)\n- `Public claims`: 根据需要定义自己的字段,注意应该避免冲突\n- `Private claims`: 这些是自定义的字段,可以用来在双方之间交换信息\n\n举个栗子:\n  ```json\n  {\n    \"sub\": \"4008517517\",\n    \"name\": \"John Doe\",\n    \"admin\": true\n  }\n  ```\n### Signature\n\n创建签名需要使用编码后的`headers`和`payload`以及一个密钥(secret),使用`headers`中制定签名进行签名算法进行签名.例如如果希望使用HMAC SHA256算法,那么签名应该使用下列方式创建:\n\n```java\nHMACSHA256(\nbase64UrlEncode(header) + \".\" +\nbase64UrlEncode(payload),\nsecret)\n```\n签名用于验证消息的发送者以及消息是没有经过篡改的.\n\n### 完整的JWT\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0Nzk0NTYxMzI5NjJ9.yWGqnRYMhdLOEHlLI3_WIpHPtX3QHEdpJQHx_B0meaA\n```\n## 实现步骤\n\n- 客户端发送用户名与密码到服务器\n- 服务器进行信息核对\n- 服务器生成token(`payload`中包含的为`user_id`)\n- 服务器应用返回token,以后每次用户的请求都带上token\n- 服务器应用验证token有效性.例如:签名是否正确?token是否过期?检查token的接收方是否为自己(可选)?\n- 服务器应用返回响应的信息\n\n## node模块[jwt-simple](https://github.com/hokaccha/node-jwt-simple)\n\n使用`express`框架，`jwt-simple`模块来构建中间件（另外，我在github上边也找到[express-jwt](https://github.com/auth0/express-jwt)模块，好像也还不错的样子，但是没有实践过）。\n\n### 产生token\n\n```js\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as jwt from 'jwt-simple';\n\nlet app = express();\n\napp.set('jwtTokenSecret', 'phpsucks!');\napp.use(bodyParser.json());\n\napp.post('/', (req, res) => {\n  let user = req.body;\n  // 产生token过期时间，这里设置\n  let expires = Date.now() + 7*24*60*60*1000;\n  let token = jwt.encode({\n    iss: user.id, // issuer 表明请求的实体\n    exp: expires, // expires token的生命周期\n    aud: 'jser'\n  }, app.get('jwtTokenSecret'));\n\n  res.json({\n    token: token,\n    expires: expires\n  });\n});\n```\n### 获取token并解析\n```js\napp.get('/', (req, res) => {\n  // 获取token,这里默认是放在headers的authorization\n  let token = req.headers.authorization;\n  if (token) {\n    let decoded = jwt.decode(token, app.get('jwtTokenSecret'));\n    // 判断是否token已过期以及接收方是否为自己\n    if(decoded.exp <= Date.now() || decoded.aud !== 'jser') {\n      res.sendStatus(401)\n    } else {\n      res.sendStatus(200)\n    }\n  } else {\n    res.sendStatus(401)\n  }\n});\n```\n\n相对于常用的session而言，JWT通过将状态的记录放置于客户端，从而降低服务端因反复查询数据库而产生的压力。这应该就是JWT的最大优点了吧！","source":"_posts/express-jwt.md","raw":"---\ntitle: express编写JWT中间件\ndate: 2016-11-26 11:17:00\ncategories: node.js\ntags:\n  - node.js\n  - express\n  - jwt\n---\n> 最近由于项目需要，学习了一下JWT这种身份验证的方法。在这里做一下总结。\n> 本文主要是做一些总结，参考文章链接：[JSON Web Token - 在Web应用间安全地传递信息](http://blog.leapoahead.com/2015/09/06/understanding-jwt/)\n\n# 什么是JWT\n\nJWT是一种用于双方之间传递安全信息的简洁的、URL安全的表述性声明规范。\n- 简洁(Compact): 可以通过URL，POST参数或者在HTTP header发送，因为数据量小，传输速度也很快;\n- 自包含(Self-contained)：负载中包含了所有用户所需要的信息，避免了多次查询数据库;\n\n## JWT结构简介\n\nJWT结构:\n- `Headers`头部\n- `Payload`负载\n- `Signature`签名\n\n整体结构为:\n`xxxxx.yyyyy.zzzzz`\n\n### Headers\n\n在`headers`中通常包含了两部分: `token`类型和采用的加密算法\n\n```json\n{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n```\n- alg: 算法类型\n- typ: token类型\n\n### Payload\n\n`Token`的第二部分时负载,它包含了`claim`,`Claim`是一些实体(通常指的用户)的状态和额外的元数据,有三种类型的`claim`: `reserved`,`public`和`private`.\n\n- `Reserved claims`:这些`claim`是JWT预先定义的,在JWT中并不会强制使用它们,而是推荐使用,常用的有:\n- iss(签发者)\n- exp(过期时间戳)\n- sub(面向的用户)\n- aud(接收方)\n- iat(签发时间)\n- `Public claims`: 根据需要定义自己的字段,注意应该避免冲突\n- `Private claims`: 这些是自定义的字段,可以用来在双方之间交换信息\n\n举个栗子:\n  ```json\n  {\n    \"sub\": \"4008517517\",\n    \"name\": \"John Doe\",\n    \"admin\": true\n  }\n  ```\n### Signature\n\n创建签名需要使用编码后的`headers`和`payload`以及一个密钥(secret),使用`headers`中制定签名进行签名算法进行签名.例如如果希望使用HMAC SHA256算法,那么签名应该使用下列方式创建:\n\n```java\nHMACSHA256(\nbase64UrlEncode(header) + \".\" +\nbase64UrlEncode(payload),\nsecret)\n```\n签名用于验证消息的发送者以及消息是没有经过篡改的.\n\n### 完整的JWT\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0Nzk0NTYxMzI5NjJ9.yWGqnRYMhdLOEHlLI3_WIpHPtX3QHEdpJQHx_B0meaA\n```\n## 实现步骤\n\n- 客户端发送用户名与密码到服务器\n- 服务器进行信息核对\n- 服务器生成token(`payload`中包含的为`user_id`)\n- 服务器应用返回token,以后每次用户的请求都带上token\n- 服务器应用验证token有效性.例如:签名是否正确?token是否过期?检查token的接收方是否为自己(可选)?\n- 服务器应用返回响应的信息\n\n## node模块[jwt-simple](https://github.com/hokaccha/node-jwt-simple)\n\n使用`express`框架，`jwt-simple`模块来构建中间件（另外，我在github上边也找到[express-jwt](https://github.com/auth0/express-jwt)模块，好像也还不错的样子，但是没有实践过）。\n\n### 产生token\n\n```js\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as jwt from 'jwt-simple';\n\nlet app = express();\n\napp.set('jwtTokenSecret', 'phpsucks!');\napp.use(bodyParser.json());\n\napp.post('/', (req, res) => {\n  let user = req.body;\n  // 产生token过期时间，这里设置\n  let expires = Date.now() + 7*24*60*60*1000;\n  let token = jwt.encode({\n    iss: user.id, // issuer 表明请求的实体\n    exp: expires, // expires token的生命周期\n    aud: 'jser'\n  }, app.get('jwtTokenSecret'));\n\n  res.json({\n    token: token,\n    expires: expires\n  });\n});\n```\n### 获取token并解析\n```js\napp.get('/', (req, res) => {\n  // 获取token,这里默认是放在headers的authorization\n  let token = req.headers.authorization;\n  if (token) {\n    let decoded = jwt.decode(token, app.get('jwtTokenSecret'));\n    // 判断是否token已过期以及接收方是否为自己\n    if(decoded.exp <= Date.now() || decoded.aud !== 'jser') {\n      res.sendStatus(401)\n    } else {\n      res.sendStatus(200)\n    }\n  } else {\n    res.sendStatus(401)\n  }\n});\n```\n\n相对于常用的session而言，JWT通过将状态的记录放置于客户端，从而降低服务端因反复查询数据库而产生的压力。这应该就是JWT的最大优点了吧！","slug":"express-jwt","published":1,"updated":"2017-07-02T05:16:41.000Z","_id":"cj4m5g4vp00026cwkk654o03r","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>最近由于项目需要，学习了一下JWT这种身份验证的方法。在这里做一下总结。<br>本文主要是做一些总结，参考文章链接：<a href=\"http://blog.leapoahead.com/2015/09/06/understanding-jwt/\" target=\"_blank\" rel=\"external\">JSON Web Token - 在Web应用间安全地传递信息</a></p>\n</blockquote>\n<h1 id=\"什么是JWT\"><a href=\"#什么是JWT\" class=\"headerlink\" title=\"什么是JWT\"></a>什么是JWT</h1><p>JWT是一种用于双方之间传递安全信息的简洁的、URL安全的表述性声明规范。</p>\n<ul>\n<li>简洁(Compact): 可以通过URL，POST参数或者在HTTP header发送，因为数据量小，传输速度也很快;</li>\n<li>自包含(Self-contained)：负载中包含了所有用户所需要的信息，避免了多次查询数据库;</li>\n</ul>\n<h2 id=\"JWT结构简介\"><a href=\"#JWT结构简介\" class=\"headerlink\" title=\"JWT结构简介\"></a>JWT结构简介</h2><p>JWT结构:</p>\n<ul>\n<li><code>Headers</code>头部</li>\n<li><code>Payload</code>负载</li>\n<li><code>Signature</code>签名</li>\n</ul>\n<p>整体结构为:<br><code>xxxxx.yyyyy.zzzzz</code></p>\n<h3 id=\"Headers\"><a href=\"#Headers\" class=\"headerlink\" title=\"Headers\"></a>Headers</h3><p>在<code>headers</code>中通常包含了两部分: <code>token</code>类型和采用的加密算法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"alg\"</span>: <span class=\"string\">\"HS256\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"typ\"</span>: <span class=\"string\">\"JWT\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>alg: 算法类型</li>\n<li>typ: token类型</li>\n</ul>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p><code>Token</code>的第二部分时负载,它包含了<code>claim</code>,<code>Claim</code>是一些实体(通常指的用户)的状态和额外的元数据,有三种类型的<code>claim</code>: <code>reserved</code>,<code>public</code>和<code>private</code>.</p>\n<ul>\n<li><code>Reserved claims</code>:这些<code>claim</code>是JWT预先定义的,在JWT中并不会强制使用它们,而是推荐使用,常用的有:</li>\n<li>iss(签发者)</li>\n<li>exp(过期时间戳)</li>\n<li>sub(面向的用户)</li>\n<li>aud(接收方)</li>\n<li>iat(签发时间)</li>\n<li><code>Public claims</code>: 根据需要定义自己的字段,注意应该避免冲突</li>\n<li><code>Private claims</code>: 这些是自定义的字段,可以用来在双方之间交换信息</li>\n</ul>\n<p>举个栗子:<br>  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"sub\"</span>: <span class=\"string\">\"4008517517\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"John Doe\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"admin\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h3><p>创建签名需要使用编码后的<code>headers</code>和<code>payload</code>以及一个密钥(secret),使用<code>headers</code>中制定签名进行签名算法进行签名.例如如果希望使用HMAC SHA256算法,那么签名应该使用下列方式创建:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMACSHA256(</div><div class=\"line\">base64UrlEncode(header) + <span class=\"string\">\".\"</span> +</div><div class=\"line\">base64UrlEncode(payload),</div><div class=\"line\">secret)</div></pre></td></tr></table></figure>\n<p>签名用于验证消息的发送者以及消息是没有经过篡改的.</p>\n<h3 id=\"完整的JWT\"><a href=\"#完整的JWT\" class=\"headerlink\" title=\"完整的JWT\"></a>完整的JWT</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0Nzk0NTYxMzI5NjJ9.yWGqnRYMhdLOEHlLI3_WIpHPtX3QHEdpJQHx_B0meaA</div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><ul>\n<li>客户端发送用户名与密码到服务器</li>\n<li>服务器进行信息核对</li>\n<li>服务器生成token(<code>payload</code>中包含的为<code>user_id</code>)</li>\n<li>服务器应用返回token,以后每次用户的请求都带上token</li>\n<li>服务器应用验证token有效性.例如:签名是否正确?token是否过期?检查token的接收方是否为自己(可选)?</li>\n<li>服务器应用返回响应的信息</li>\n</ul>\n<h2 id=\"node模块jwt-simple\"><a href=\"#node模块jwt-simple\" class=\"headerlink\" title=\"node模块jwt-simple\"></a>node模块<a href=\"https://github.com/hokaccha/node-jwt-simple\" target=\"_blank\" rel=\"external\">jwt-simple</a></h2><p>使用<code>express</code>框架，<code>jwt-simple</code>模块来构建中间件（另外，我在github上边也找到<a href=\"https://github.com/auth0/express-jwt\" target=\"_blank\" rel=\"external\">express-jwt</a>模块，好像也还不错的样子，但是没有实践过）。</p>\n<h3 id=\"产生token\"><a href=\"#产生token\" class=\"headerlink\" title=\"产生token\"></a>产生token</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bodyParser <span class=\"keyword\">from</span> <span class=\"string\">'body-parser'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> jwt <span class=\"keyword\">from</span> <span class=\"string\">'jwt-simple'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.set(<span class=\"string\">'jwtTokenSecret'</span>, <span class=\"string\">'phpsucks!'</span>);</div><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\"></div><div class=\"line\">app.post(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> user = req.body;</div><div class=\"line\">  <span class=\"comment\">// 产生token过期时间，这里设置</span></div><div class=\"line\">  <span class=\"keyword\">let</span> expires = <span class=\"built_in\">Date</span>.now() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>;</div><div class=\"line\">  <span class=\"keyword\">let</span> token = jwt.encode(&#123;</div><div class=\"line\">    <span class=\"attr\">iss</span>: user.id, <span class=\"comment\">// issuer 表明请求的实体</span></div><div class=\"line\">    exp: expires, <span class=\"comment\">// expires token的生命周期</span></div><div class=\"line\">    aud: <span class=\"string\">'jser'</span></div><div class=\"line\">  &#125;, app.get(<span class=\"string\">'jwtTokenSecret'</span>));</div><div class=\"line\"></div><div class=\"line\">  res.json(&#123;</div><div class=\"line\">    <span class=\"attr\">token</span>: token,</div><div class=\"line\">    <span class=\"attr\">expires</span>: expires</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"获取token并解析\"><a href=\"#获取token并解析\" class=\"headerlink\" title=\"获取token并解析\"></a>获取token并解析</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\">// 获取token,这里默认是放在headers的authorization</span></div><div class=\"line\">  <span class=\"keyword\">let</span> token = req.headers.authorization;</div><div class=\"line\">  <span class=\"keyword\">if</span> (token) &#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> decoded = jwt.decode(token, app.get(<span class=\"string\">'jwtTokenSecret'</span>));</div><div class=\"line\">    <span class=\"comment\">// 判断是否token已过期以及接收方是否为自己</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(decoded.exp &lt;= <span class=\"built_in\">Date</span>.now() || decoded.aud !== <span class=\"string\">'jser'</span>) &#123;</div><div class=\"line\">      res.sendStatus(<span class=\"number\">401</span>)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      res.sendStatus(<span class=\"number\">200</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    res.sendStatus(<span class=\"number\">401</span>)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>相对于常用的session而言，JWT通过将状态的记录放置于客户端，从而降低服务端因反复查询数据库而产生的压力。这应该就是JWT的最大优点了吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>最近由于项目需要，学习了一下JWT这种身份验证的方法。在这里做一下总结。<br>本文主要是做一些总结，参考文章链接：<a href=\"http://blog.leapoahead.com/2015/09/06/understanding-jwt/\" target=\"_blank\" rel=\"external\">JSON Web Token - 在Web应用间安全地传递信息</a></p>\n</blockquote>\n<h1 id=\"什么是JWT\"><a href=\"#什么是JWT\" class=\"headerlink\" title=\"什么是JWT\"></a>什么是JWT</h1><p>JWT是一种用于双方之间传递安全信息的简洁的、URL安全的表述性声明规范。</p>\n<ul>\n<li>简洁(Compact): 可以通过URL，POST参数或者在HTTP header发送，因为数据量小，传输速度也很快;</li>\n<li>自包含(Self-contained)：负载中包含了所有用户所需要的信息，避免了多次查询数据库;</li>\n</ul>\n<h2 id=\"JWT结构简介\"><a href=\"#JWT结构简介\" class=\"headerlink\" title=\"JWT结构简介\"></a>JWT结构简介</h2><p>JWT结构:</p>\n<ul>\n<li><code>Headers</code>头部</li>\n<li><code>Payload</code>负载</li>\n<li><code>Signature</code>签名</li>\n</ul>\n<p>整体结构为:<br><code>xxxxx.yyyyy.zzzzz</code></p>\n<h3 id=\"Headers\"><a href=\"#Headers\" class=\"headerlink\" title=\"Headers\"></a>Headers</h3><p>在<code>headers</code>中通常包含了两部分: <code>token</code>类型和采用的加密算法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"alg\"</span>: <span class=\"string\">\"HS256\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"typ\"</span>: <span class=\"string\">\"JWT\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>alg: 算法类型</li>\n<li>typ: token类型</li>\n</ul>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p><code>Token</code>的第二部分时负载,它包含了<code>claim</code>,<code>Claim</code>是一些实体(通常指的用户)的状态和额外的元数据,有三种类型的<code>claim</code>: <code>reserved</code>,<code>public</code>和<code>private</code>.</p>\n<ul>\n<li><code>Reserved claims</code>:这些<code>claim</code>是JWT预先定义的,在JWT中并不会强制使用它们,而是推荐使用,常用的有:</li>\n<li>iss(签发者)</li>\n<li>exp(过期时间戳)</li>\n<li>sub(面向的用户)</li>\n<li>aud(接收方)</li>\n<li>iat(签发时间)</li>\n<li><code>Public claims</code>: 根据需要定义自己的字段,注意应该避免冲突</li>\n<li><code>Private claims</code>: 这些是自定义的字段,可以用来在双方之间交换信息</li>\n</ul>\n<p>举个栗子:<br>  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"sub\"</span>: <span class=\"string\">\"4008517517\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"John Doe\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"admin\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h3><p>创建签名需要使用编码后的<code>headers</code>和<code>payload</code>以及一个密钥(secret),使用<code>headers</code>中制定签名进行签名算法进行签名.例如如果希望使用HMAC SHA256算法,那么签名应该使用下列方式创建:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMACSHA256(</div><div class=\"line\">base64UrlEncode(header) + <span class=\"string\">\".\"</span> +</div><div class=\"line\">base64UrlEncode(payload),</div><div class=\"line\">secret)</div></pre></td></tr></table></figure>\n<p>签名用于验证消息的发送者以及消息是没有经过篡改的.</p>\n<h3 id=\"完整的JWT\"><a href=\"#完整的JWT\" class=\"headerlink\" title=\"完整的JWT\"></a>完整的JWT</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0Nzk0NTYxMzI5NjJ9.yWGqnRYMhdLOEHlLI3_WIpHPtX3QHEdpJQHx_B0meaA</div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><ul>\n<li>客户端发送用户名与密码到服务器</li>\n<li>服务器进行信息核对</li>\n<li>服务器生成token(<code>payload</code>中包含的为<code>user_id</code>)</li>\n<li>服务器应用返回token,以后每次用户的请求都带上token</li>\n<li>服务器应用验证token有效性.例如:签名是否正确?token是否过期?检查token的接收方是否为自己(可选)?</li>\n<li>服务器应用返回响应的信息</li>\n</ul>\n<h2 id=\"node模块jwt-simple\"><a href=\"#node模块jwt-simple\" class=\"headerlink\" title=\"node模块jwt-simple\"></a>node模块<a href=\"https://github.com/hokaccha/node-jwt-simple\" target=\"_blank\" rel=\"external\">jwt-simple</a></h2><p>使用<code>express</code>框架，<code>jwt-simple</code>模块来构建中间件（另外，我在github上边也找到<a href=\"https://github.com/auth0/express-jwt\" target=\"_blank\" rel=\"external\">express-jwt</a>模块，好像也还不错的样子，但是没有实践过）。</p>\n<h3 id=\"产生token\"><a href=\"#产生token\" class=\"headerlink\" title=\"产生token\"></a>产生token</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> express <span class=\"keyword\">from</span> <span class=\"string\">'express'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bodyParser <span class=\"keyword\">from</span> <span class=\"string\">'body-parser'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> jwt <span class=\"keyword\">from</span> <span class=\"string\">'jwt-simple'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.set(<span class=\"string\">'jwtTokenSecret'</span>, <span class=\"string\">'phpsucks!'</span>);</div><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\"></div><div class=\"line\">app.post(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> user = req.body;</div><div class=\"line\">  <span class=\"comment\">// 产生token过期时间，这里设置</span></div><div class=\"line\">  <span class=\"keyword\">let</span> expires = <span class=\"built_in\">Date</span>.now() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>;</div><div class=\"line\">  <span class=\"keyword\">let</span> token = jwt.encode(&#123;</div><div class=\"line\">    <span class=\"attr\">iss</span>: user.id, <span class=\"comment\">// issuer 表明请求的实体</span></div><div class=\"line\">    exp: expires, <span class=\"comment\">// expires token的生命周期</span></div><div class=\"line\">    aud: <span class=\"string\">'jser'</span></div><div class=\"line\">  &#125;, app.get(<span class=\"string\">'jwtTokenSecret'</span>));</div><div class=\"line\"></div><div class=\"line\">  res.json(&#123;</div><div class=\"line\">    <span class=\"attr\">token</span>: token,</div><div class=\"line\">    <span class=\"attr\">expires</span>: expires</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"获取token并解析\"><a href=\"#获取token并解析\" class=\"headerlink\" title=\"获取token并解析\"></a>获取token并解析</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\">// 获取token,这里默认是放在headers的authorization</span></div><div class=\"line\">  <span class=\"keyword\">let</span> token = req.headers.authorization;</div><div class=\"line\">  <span class=\"keyword\">if</span> (token) &#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> decoded = jwt.decode(token, app.get(<span class=\"string\">'jwtTokenSecret'</span>));</div><div class=\"line\">    <span class=\"comment\">// 判断是否token已过期以及接收方是否为自己</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(decoded.exp &lt;= <span class=\"built_in\">Date</span>.now() || decoded.aud !== <span class=\"string\">'jser'</span>) &#123;</div><div class=\"line\">      res.sendStatus(<span class=\"number\">401</span>)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      res.sendStatus(<span class=\"number\">200</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    res.sendStatus(<span class=\"number\">401</span>)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>相对于常用的session而言，JWT通过将状态的记录放置于客户端，从而降低服务端因反复查询数据库而产生的压力。这应该就是JWT的最大优点了吧！</p>\n"},{"title":"利用apidoc在注释里写API文档","date":"2017-01-15T06:59:00.000Z","_content":"> 本文基于`node.js`的代码注释编写。\n\n程序员都不喜欢写文档，但是程序员习惯写注释。所以今天给大家安利一个注释文档的工具——[apidoc](http://apidocjs.com)，一个在注释里边编写API文档的小工具！\n\n**由于经验以及英文水平问题，文中很有可能会有错漏，各位大神如果看出来了，麻烦指出一下。谢谢～**\n\n# 安装apidoc\n\n```sh\nnpm install -g apidoc\n```\n\n# 运行\n```sh\napidoc -i myapp/ -o apidoc/ -t mytemplate/\n```\n\n- -i 需要编译的包含注释的文件\n- -o 输入文件夹名称\n- t 模板\n\n具体的详细帮助可以通过`apidoc -h`查看。\n\n# 设置（apidoc.json）\n\n我们可以通过`apidoc.json`文件来设置项目API文档的一些内容。例如：\n```json\n{ \n  \"name\": \"example\", \n  \"version\": \"0.1.0\", \n  \"description\": \"apiDoc basic example\",\n  \"title\": \"Custom apiDoc browser title\", \n  \"url\" : \"https://api.github.com/v1\"\n}\n```\n又或者通过`package.json`来设置apidoc的文档设置也是支持的。\n```json\n{ \n  \"name\": \"example\", \n  \"version\": \"0.1.0\", \n  \"description\": \"apiDoc basic example\", \n  \"apidoc\": { \n      \"title\": \"Custom apiDoc browser title\", \n      \"url\" : \"https://api.github.com/v1\" \n  }\n}\n```\n\n# 简单介绍一下注释的编写\n\n因为[apidoc官网](http://apidocjs.com)已经有详细的介绍了，所以这里就只是简单的介绍写apidoc常用的语法。\n\n## @api\n\n`@api`一般是必须编写的（除非你是用了[`@apiDefine`](http://apidocjs.com/#param-api-define)），不然apidoc编译器会忽略这段注释。\n\n```js\n/** \n * @api {method} path [title]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| method       | 请求的方法名称：如`GET`、`POST`等等       |\n| path        | 请求路径  |\n| title(可选)        | 一个简短的标题（用于导航跟文档标题）|\n\n## @apiGroup\n\n定于api归属的组名，生成的文档会把该api注释归类到该值对应的api组上。\n\n```js\n/**\n * @apiGroup name\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| name       | 组名称      |\n\n\n## @apiName \n\n`@apiName`用于定义API文档的一个实例，并用作实例名称 。\n\n```js\n/**\n * @apiName name\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| name       | 实例名称      |\n\n## @apiParam\n\n`@apiParam`用于编写API的参数以及参数的解释。\n\n```js\n/**\n * @apiParam [(group)] [{type}] [field=defaultValue] [description]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| (group) `可选`       | 参数归属组名，不填写组名，则默认设为`Paramter`      |\n| {type} `可选`       | 参数数据类型，如`{String}`、`{Number}`、`{Array}`等等      |\n| {type{size}} `可选` | 变量的大小信息 `{String{..5}}`参数类型为一个字符不超过5的字符串；`{String{2..5}}`参数为一个字符在2到5之间的字符串； |\n| {type=allowedValues} `可选` | 参数允许值 `{string=\"small\",\"huge\"}`参数只能接受`small`或者`huge`的字符串 |\n| field `可选`       | 参数名称      |\n|  =defaultValue | 参数默认值 |\n| description(可选)       | 描述      |\n\n## @apiParamExample\n\n`@apiParamExample`参数例子\n\n```js\n/**\n * @apiParamExample [{type}] [title]\n *    example\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| {type} `可选`       | 请求数据结构      |\n| title `可选` | 例子的一个简短的标题 |\n| example  | 例子的详细信息，可多个例子并存 |\n\n## @apiSuccess\n\n请求成功后的返回字段参数\n\n```js\n/**\n * @apiSuccess [(group)] [{type}] field [description]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| (group) `可选`       | 参数归属组名，不填写组名，则默认设为`Success 200`      |\n| {type} `可选` | 返回的数据类型，如`{String}`、`{Number}`等等 |\n| field  | 返回的标示符（返回成功的状态码） |\n| description `可选` | 描述 |\n\n## @apiSuccessExample\n\n请求成功后返回的字段参数例子\n\n```js\n/**\n * @apiSuccessExample [{type}] [title] example\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| {type} `可选`       | 请求数据结构      |\n| title `可选` | 例子的一个简短的标题 |\n| example  | 例子的详细信息，可多个例子并存 |\n\n## @apiError & @apiErrorExample\n\n这个的用法跟`@apiSuccess`、`@apiSuccessExample`的用法相类似。\n\n# 举个栗子\n\n下边举一个根据id获取文章资源API的例子\n\n```js\n/**\n * @api {get} /articles/:id 根据单个id获取文章信息\n * @apiName 根据id获取文章信息\n * @apiGroup Articles\n *\n * @apiParam (params) {String} id       文章id\n *\n * @apiSuccess {Array} article 返回相应id的文章信息\n *\n * @apiSuccessExample Success-Response:\n *    HTTP/1.1 200 OK\n *      {\n *        \"tile\": \"文章标题2\",\n *        \"date\": 1483941498230,\n *        \"author\": \"classlfz\",\n *        \"content\": \"文章的详细内容\"\n *       }\n *\n * @apiError (Error 4xx) 404 对应id的文章信息不存在\n *\n * @apiErrorExample Error-Response:\n *     HTTP/1.1 404 对应id的文章信息不存在\n *     {\n *       \"error\": err\n *     }\n */\n```\n\n接着我们运行`apidoc -i src/ -o docs`，就会看到项目里边多了一个docs的文件夹，打开里边的`index.html`，就可以看到生成的API文档了。如下图：\n\n![FireShot Capture 1 - Custom apiDoc browser title_ - file____home_classlfz_github_expres.png](http://upload-images.jianshu.io/upload_images/1626912-5555c6d326baadf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这样子，我们就可以轻松的通过注释得到一个API文档了，而不需要在写完代码之后还要去打开word或者md文件去另外编写API文档......对于我本人而言，我是比较喜欢这样子的工作方式的。\n\n如果项目是放在[github](https://github.com/)上边的话，我们可以使用[github pages](https://pages.github.com/)来[公布API文档](http://www.jianshu.com/p/f8cec06f2d8b)，方便协同开发。\n\n# 写成gulp任务\n\n因为平时用gulp比较多，这里再补上通过gulp任务来生成apidoc文档。\n\n## 安装依赖\n\n```sh\nnpm install gulp gulp-apidoc --save-dev\n```\n\n## 编写gulp代码\n\n```js\n// 构建apidoc\ngulp.task('apidoc', (done) => {\n  apidoc({\n    src: 'src/',\n    dest: 'docs',\n    debug: true,\n    includeFilters: ['.*\\\\.js$']\n  }, done);\n});\n```","source":"_posts/use-apidoc-to-write-api-doc.md","raw":"---\ntitle: 利用apidoc在注释里写API文档\ndate: 2017-01-15 14:59:00\ncategories: node.js\ntags:\n  - node.js\n  - apidoc\n---\n> 本文基于`node.js`的代码注释编写。\n\n程序员都不喜欢写文档，但是程序员习惯写注释。所以今天给大家安利一个注释文档的工具——[apidoc](http://apidocjs.com)，一个在注释里边编写API文档的小工具！\n\n**由于经验以及英文水平问题，文中很有可能会有错漏，各位大神如果看出来了，麻烦指出一下。谢谢～**\n\n# 安装apidoc\n\n```sh\nnpm install -g apidoc\n```\n\n# 运行\n```sh\napidoc -i myapp/ -o apidoc/ -t mytemplate/\n```\n\n- -i 需要编译的包含注释的文件\n- -o 输入文件夹名称\n- t 模板\n\n具体的详细帮助可以通过`apidoc -h`查看。\n\n# 设置（apidoc.json）\n\n我们可以通过`apidoc.json`文件来设置项目API文档的一些内容。例如：\n```json\n{ \n  \"name\": \"example\", \n  \"version\": \"0.1.0\", \n  \"description\": \"apiDoc basic example\",\n  \"title\": \"Custom apiDoc browser title\", \n  \"url\" : \"https://api.github.com/v1\"\n}\n```\n又或者通过`package.json`来设置apidoc的文档设置也是支持的。\n```json\n{ \n  \"name\": \"example\", \n  \"version\": \"0.1.0\", \n  \"description\": \"apiDoc basic example\", \n  \"apidoc\": { \n      \"title\": \"Custom apiDoc browser title\", \n      \"url\" : \"https://api.github.com/v1\" \n  }\n}\n```\n\n# 简单介绍一下注释的编写\n\n因为[apidoc官网](http://apidocjs.com)已经有详细的介绍了，所以这里就只是简单的介绍写apidoc常用的语法。\n\n## @api\n\n`@api`一般是必须编写的（除非你是用了[`@apiDefine`](http://apidocjs.com/#param-api-define)），不然apidoc编译器会忽略这段注释。\n\n```js\n/** \n * @api {method} path [title]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| method       | 请求的方法名称：如`GET`、`POST`等等       |\n| path        | 请求路径  |\n| title(可选)        | 一个简短的标题（用于导航跟文档标题）|\n\n## @apiGroup\n\n定于api归属的组名，生成的文档会把该api注释归类到该值对应的api组上。\n\n```js\n/**\n * @apiGroup name\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| name       | 组名称      |\n\n\n## @apiName \n\n`@apiName`用于定义API文档的一个实例，并用作实例名称 。\n\n```js\n/**\n * @apiName name\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| name       | 实例名称      |\n\n## @apiParam\n\n`@apiParam`用于编写API的参数以及参数的解释。\n\n```js\n/**\n * @apiParam [(group)] [{type}] [field=defaultValue] [description]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| (group) `可选`       | 参数归属组名，不填写组名，则默认设为`Paramter`      |\n| {type} `可选`       | 参数数据类型，如`{String}`、`{Number}`、`{Array}`等等      |\n| {type{size}} `可选` | 变量的大小信息 `{String{..5}}`参数类型为一个字符不超过5的字符串；`{String{2..5}}`参数为一个字符在2到5之间的字符串； |\n| {type=allowedValues} `可选` | 参数允许值 `{string=\"small\",\"huge\"}`参数只能接受`small`或者`huge`的字符串 |\n| field `可选`       | 参数名称      |\n|  =defaultValue | 参数默认值 |\n| description(可选)       | 描述      |\n\n## @apiParamExample\n\n`@apiParamExample`参数例子\n\n```js\n/**\n * @apiParamExample [{type}] [title]\n *    example\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| {type} `可选`       | 请求数据结构      |\n| title `可选` | 例子的一个简短的标题 |\n| example  | 例子的详细信息，可多个例子并存 |\n\n## @apiSuccess\n\n请求成功后的返回字段参数\n\n```js\n/**\n * @apiSuccess [(group)] [{type}] field [description]\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| (group) `可选`       | 参数归属组名，不填写组名，则默认设为`Success 200`      |\n| {type} `可选` | 返回的数据类型，如`{String}`、`{Number}`等等 |\n| field  | 返回的标示符（返回成功的状态码） |\n| description `可选` | 描述 |\n\n## @apiSuccessExample\n\n请求成功后返回的字段参数例子\n\n```js\n/**\n * @apiSuccessExample [{type}] [title] example\n */\n```\n| Name     | Description     |\n| :------------- | :------------- |\n| {type} `可选`       | 请求数据结构      |\n| title `可选` | 例子的一个简短的标题 |\n| example  | 例子的详细信息，可多个例子并存 |\n\n## @apiError & @apiErrorExample\n\n这个的用法跟`@apiSuccess`、`@apiSuccessExample`的用法相类似。\n\n# 举个栗子\n\n下边举一个根据id获取文章资源API的例子\n\n```js\n/**\n * @api {get} /articles/:id 根据单个id获取文章信息\n * @apiName 根据id获取文章信息\n * @apiGroup Articles\n *\n * @apiParam (params) {String} id       文章id\n *\n * @apiSuccess {Array} article 返回相应id的文章信息\n *\n * @apiSuccessExample Success-Response:\n *    HTTP/1.1 200 OK\n *      {\n *        \"tile\": \"文章标题2\",\n *        \"date\": 1483941498230,\n *        \"author\": \"classlfz\",\n *        \"content\": \"文章的详细内容\"\n *       }\n *\n * @apiError (Error 4xx) 404 对应id的文章信息不存在\n *\n * @apiErrorExample Error-Response:\n *     HTTP/1.1 404 对应id的文章信息不存在\n *     {\n *       \"error\": err\n *     }\n */\n```\n\n接着我们运行`apidoc -i src/ -o docs`，就会看到项目里边多了一个docs的文件夹，打开里边的`index.html`，就可以看到生成的API文档了。如下图：\n\n![FireShot Capture 1 - Custom apiDoc browser title_ - file____home_classlfz_github_expres.png](http://upload-images.jianshu.io/upload_images/1626912-5555c6d326baadf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这样子，我们就可以轻松的通过注释得到一个API文档了，而不需要在写完代码之后还要去打开word或者md文件去另外编写API文档......对于我本人而言，我是比较喜欢这样子的工作方式的。\n\n如果项目是放在[github](https://github.com/)上边的话，我们可以使用[github pages](https://pages.github.com/)来[公布API文档](http://www.jianshu.com/p/f8cec06f2d8b)，方便协同开发。\n\n# 写成gulp任务\n\n因为平时用gulp比较多，这里再补上通过gulp任务来生成apidoc文档。\n\n## 安装依赖\n\n```sh\nnpm install gulp gulp-apidoc --save-dev\n```\n\n## 编写gulp代码\n\n```js\n// 构建apidoc\ngulp.task('apidoc', (done) => {\n  apidoc({\n    src: 'src/',\n    dest: 'docs',\n    debug: true,\n    includeFilters: ['.*\\\\.js$']\n  }, done);\n});\n```","slug":"use-apidoc-to-write-api-doc","published":1,"updated":"2017-07-02T05:17:24.789Z","_id":"cj4m5g4vr00036cwkm86vpr2u","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>本文基于<code>node.js</code>的代码注释编写。</p>\n</blockquote>\n<p>程序员都不喜欢写文档，但是程序员习惯写注释。所以今天给大家安利一个注释文档的工具——<a href=\"http://apidocjs.com\" target=\"_blank\" rel=\"external\">apidoc</a>，一个在注释里边编写API文档的小工具！</p>\n<p><strong>由于经验以及英文水平问题，文中很有可能会有错漏，各位大神如果看出来了，麻烦指出一下。谢谢～</strong></p>\n<h1 id=\"安装apidoc\"><a href=\"#安装apidoc\" class=\"headerlink\" title=\"安装apidoc\"></a>安装apidoc</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g apidoc</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apidoc -i myapp/ -o apidoc/ -t mytemplate/</div></pre></td></tr></table></figure>\n<ul>\n<li>-i 需要编译的包含注释的文件</li>\n<li>-o 输入文件夹名称</li>\n<li>t 模板</li>\n</ul>\n<p>具体的详细帮助可以通过<code>apidoc -h</code>查看。</p>\n<h1 id=\"设置（apidoc-json）\"><a href=\"#设置（apidoc-json）\" class=\"headerlink\" title=\"设置（apidoc.json）\"></a>设置（apidoc.json）</h1><p>我们可以通过<code>apidoc.json</code>文件来设置项目API文档的一些内容。例如：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; </div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"apiDoc basic example\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Custom apiDoc browser title\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"url\"</span> : <span class=\"string\">\"https://api.github.com/v1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>又或者通过<code>package.json</code>来设置apidoc的文档设置也是支持的。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; </div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"apiDoc basic example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"apidoc\"</span>: &#123; </div><div class=\"line\">      <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Custom apiDoc browser title\"</span>, </div><div class=\"line\">      <span class=\"attr\">\"url\"</span> : <span class=\"string\">\"https://api.github.com/v1\"</span> </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"简单介绍一下注释的编写\"><a href=\"#简单介绍一下注释的编写\" class=\"headerlink\" title=\"简单介绍一下注释的编写\"></a>简单介绍一下注释的编写</h1><p>因为<a href=\"http://apidocjs.com\" target=\"_blank\" rel=\"external\">apidoc官网</a>已经有详细的介绍了，所以这里就只是简单的介绍写apidoc常用的语法。</p>\n<h2 id=\"api\"><a href=\"#api\" class=\"headerlink\" title=\"@api\"></a>@api</h2><p><code>@api</code>一般是必须编写的（除非你是用了<a href=\"http://apidocjs.com/#param-api-define\" target=\"_blank\" rel=\"external\"><code>@apiDefine</code></a>），不然apidoc编译器会忽略这段注释。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"> * @api &#123;method&#125; path [title]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">请求的方法名称：如<code>GET</code>、<code>POST</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">path</td>\n<td style=\"text-align:left\">请求路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title(可选)</td>\n<td style=\"text-align:left\">一个简短的标题（用于导航跟文档标题）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiGroup\"><a href=\"#apiGroup\" class=\"headerlink\" title=\"@apiGroup\"></a>@apiGroup</h2><p>定于api归属的组名，生成的文档会把该api注释归类到该值对应的api组上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiGroup name</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">组名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiName\"><a href=\"#apiName\" class=\"headerlink\" title=\"@apiName\"></a>@apiName</h2><p><code>@apiName</code>用于定义API文档的一个实例，并用作实例名称 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiName name</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">实例名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiParam\"><a href=\"#apiParam\" class=\"headerlink\" title=\"@apiParam\"></a>@apiParam</h2><p><code>@apiParam</code>用于编写API的参数以及参数的解释。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiParam [(group)] [&#123;type&#125;] [field=defaultValue] [description]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">(group) <code>可选</code></td>\n<td style=\"text-align:left\">参数归属组名，不填写组名，则默认设为<code>Paramter</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">参数数据类型，如<code>{String}</code>、<code>{Number}</code>、<code>{Array}</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type{size}} <code>可选</code></td>\n<td style=\"text-align:left\">变量的大小信息 <code>{String{..5}}</code>参数类型为一个字符不超过5的字符串；<code>{String{2..5}}</code>参数为一个字符在2到5之间的字符串；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type=allowedValues} <code>可选</code></td>\n<td style=\"text-align:left\">参数允许值 <code>{string=&quot;small&quot;,&quot;huge&quot;}</code>参数只能接受<code>small</code>或者<code>huge</code>的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field <code>可选</code></td>\n<td style=\"text-align:left\">参数名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">=defaultValue</td>\n<td style=\"text-align:left\">参数默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">description(可选)</td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiParamExample\"><a href=\"#apiParamExample\" class=\"headerlink\" title=\"@apiParamExample\"></a>@apiParamExample</h2><p><code>@apiParamExample</code>参数例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiParamExample [&#123;type&#125;] [title]</div><div class=\"line\"> *    example</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">请求数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title <code>可选</code></td>\n<td style=\"text-align:left\">例子的一个简短的标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\">例子的详细信息，可多个例子并存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiSuccess\"><a href=\"#apiSuccess\" class=\"headerlink\" title=\"@apiSuccess\"></a>@apiSuccess</h2><p>请求成功后的返回字段参数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiSuccess [(group)] [&#123;type&#125;] field [description]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">(group) <code>可选</code></td>\n<td style=\"text-align:left\">参数归属组名，不填写组名，则默认设为<code>Success 200</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">返回的数据类型，如<code>{String}</code>、<code>{Number}</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">返回的标示符（返回成功的状态码）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">description <code>可选</code></td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiSuccessExample\"><a href=\"#apiSuccessExample\" class=\"headerlink\" title=\"@apiSuccessExample\"></a>@apiSuccessExample</h2><p>请求成功后返回的字段参数例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiSuccessExample [&#123;type&#125;] [title] example</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">请求数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title <code>可选</code></td>\n<td style=\"text-align:left\">例子的一个简短的标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\">例子的详细信息，可多个例子并存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiError-amp-apiErrorExample\"><a href=\"#apiError-amp-apiErrorExample\" class=\"headerlink\" title=\"@apiError &amp; @apiErrorExample\"></a>@apiError &amp; @apiErrorExample</h2><p>这个的用法跟<code>@apiSuccess</code>、<code>@apiSuccessExample</code>的用法相类似。</p>\n<h1 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h1><p>下边举一个根据id获取文章资源API的例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @api &#123;get&#125; /articles/:id 根据单个id获取文章信息</div><div class=\"line\"> * @apiName 根据id获取文章信息</div><div class=\"line\"> * @apiGroup Articles</div><div class=\"line\"> *</div><div class=\"line\"> * @apiParam (params) &#123;String&#125; id       文章id</div><div class=\"line\"> *</div><div class=\"line\"> * @apiSuccess &#123;Array&#125; article 返回相应id的文章信息</div><div class=\"line\"> *</div><div class=\"line\"> * @apiSuccessExample Success-Response:</div><div class=\"line\"> *    HTTP/1.1 200 OK</div><div class=\"line\"> *      &#123;</div><div class=\"line\"> *        \"tile\": \"文章标题2\",</div><div class=\"line\"> *        \"date\": 1483941498230,</div><div class=\"line\"> *        \"author\": \"classlfz\",</div><div class=\"line\"> *        \"content\": \"文章的详细内容\"</div><div class=\"line\"> *       &#125;</div><div class=\"line\"> *</div><div class=\"line\"> * @apiError (Error 4xx) 404 对应id的文章信息不存在</div><div class=\"line\"> *</div><div class=\"line\"> * @apiErrorExample Error-Response:</div><div class=\"line\"> *     HTTP/1.1 404 对应id的文章信息不存在</div><div class=\"line\"> *     &#123;</div><div class=\"line\"> *       \"error\": err</div><div class=\"line\"> *     &#125;</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<p>接着我们运行<code>apidoc -i src/ -o docs</code>，就会看到项目里边多了一个docs的文件夹，打开里边的<code>index.html</code>，就可以看到生成的API文档了。如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-5555c6d326baadf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"FireShot Capture 1 - Custom apiDoc browser title_ - file____home_classlfz_github_expres.png\"></p>\n<p>这样子，我们就可以轻松的通过注释得到一个API文档了，而不需要在写完代码之后还要去打开word或者md文件去另外编写API文档……对于我本人而言，我是比较喜欢这样子的工作方式的。</p>\n<p>如果项目是放在<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github</a>上边的话，我们可以使用<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">github pages</a>来<a href=\"http://www.jianshu.com/p/f8cec06f2d8b\" target=\"_blank\" rel=\"external\">公布API文档</a>，方便协同开发。</p>\n<h1 id=\"写成gulp任务\"><a href=\"#写成gulp任务\" class=\"headerlink\" title=\"写成gulp任务\"></a>写成gulp任务</h1><p>因为平时用gulp比较多，这里再补上通过gulp任务来生成apidoc文档。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp gulp-apidoc --save-dev</div></pre></td></tr></table></figure>\n<h2 id=\"编写gulp代码\"><a href=\"#编写gulp代码\" class=\"headerlink\" title=\"编写gulp代码\"></a>编写gulp代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 构建apidoc</span></div><div class=\"line\">gulp.task(<span class=\"string\">'apidoc'</span>, (done) =&gt; &#123;</div><div class=\"line\">  apidoc(&#123;</div><div class=\"line\">    <span class=\"attr\">src</span>: <span class=\"string\">'src/'</span>,</div><div class=\"line\">    <span class=\"attr\">dest</span>: <span class=\"string\">'docs'</span>,</div><div class=\"line\">    <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">includeFilters</span>: [<span class=\"string\">'.*\\\\.js$'</span>]</div><div class=\"line\">  &#125;, done);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本文基于<code>node.js</code>的代码注释编写。</p>\n</blockquote>\n<p>程序员都不喜欢写文档，但是程序员习惯写注释。所以今天给大家安利一个注释文档的工具——<a href=\"http://apidocjs.com\" target=\"_blank\" rel=\"external\">apidoc</a>，一个在注释里边编写API文档的小工具！</p>\n<p><strong>由于经验以及英文水平问题，文中很有可能会有错漏，各位大神如果看出来了，麻烦指出一下。谢谢～</strong></p>\n<h1 id=\"安装apidoc\"><a href=\"#安装apidoc\" class=\"headerlink\" title=\"安装apidoc\"></a>安装apidoc</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g apidoc</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apidoc -i myapp/ -o apidoc/ -t mytemplate/</div></pre></td></tr></table></figure>\n<ul>\n<li>-i 需要编译的包含注释的文件</li>\n<li>-o 输入文件夹名称</li>\n<li>t 模板</li>\n</ul>\n<p>具体的详细帮助可以通过<code>apidoc -h</code>查看。</p>\n<h1 id=\"设置（apidoc-json）\"><a href=\"#设置（apidoc-json）\" class=\"headerlink\" title=\"设置（apidoc.json）\"></a>设置（apidoc.json）</h1><p>我们可以通过<code>apidoc.json</code>文件来设置项目API文档的一些内容。例如：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; </div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"apiDoc basic example\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Custom apiDoc browser title\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"url\"</span> : <span class=\"string\">\"https://api.github.com/v1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>又或者通过<code>package.json</code>来设置apidoc的文档设置也是支持的。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; </div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"apiDoc basic example\"</span>, </div><div class=\"line\">  <span class=\"attr\">\"apidoc\"</span>: &#123; </div><div class=\"line\">      <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Custom apiDoc browser title\"</span>, </div><div class=\"line\">      <span class=\"attr\">\"url\"</span> : <span class=\"string\">\"https://api.github.com/v1\"</span> </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"简单介绍一下注释的编写\"><a href=\"#简单介绍一下注释的编写\" class=\"headerlink\" title=\"简单介绍一下注释的编写\"></a>简单介绍一下注释的编写</h1><p>因为<a href=\"http://apidocjs.com\" target=\"_blank\" rel=\"external\">apidoc官网</a>已经有详细的介绍了，所以这里就只是简单的介绍写apidoc常用的语法。</p>\n<h2 id=\"api\"><a href=\"#api\" class=\"headerlink\" title=\"@api\"></a>@api</h2><p><code>@api</code>一般是必须编写的（除非你是用了<a href=\"http://apidocjs.com/#param-api-define\" target=\"_blank\" rel=\"external\"><code>@apiDefine</code></a>），不然apidoc编译器会忽略这段注释。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"> * @api &#123;method&#125; path [title]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">请求的方法名称：如<code>GET</code>、<code>POST</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">path</td>\n<td style=\"text-align:left\">请求路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title(可选)</td>\n<td style=\"text-align:left\">一个简短的标题（用于导航跟文档标题）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiGroup\"><a href=\"#apiGroup\" class=\"headerlink\" title=\"@apiGroup\"></a>@apiGroup</h2><p>定于api归属的组名，生成的文档会把该api注释归类到该值对应的api组上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiGroup name</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">组名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiName\"><a href=\"#apiName\" class=\"headerlink\" title=\"@apiName\"></a>@apiName</h2><p><code>@apiName</code>用于定义API文档的一个实例，并用作实例名称 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiName name</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">实例名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiParam\"><a href=\"#apiParam\" class=\"headerlink\" title=\"@apiParam\"></a>@apiParam</h2><p><code>@apiParam</code>用于编写API的参数以及参数的解释。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiParam [(group)] [&#123;type&#125;] [field=defaultValue] [description]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">(group) <code>可选</code></td>\n<td style=\"text-align:left\">参数归属组名，不填写组名，则默认设为<code>Paramter</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">参数数据类型，如<code>{String}</code>、<code>{Number}</code>、<code>{Array}</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type{size}} <code>可选</code></td>\n<td style=\"text-align:left\">变量的大小信息 <code>{String{..5}}</code>参数类型为一个字符不超过5的字符串；<code>{String{2..5}}</code>参数为一个字符在2到5之间的字符串；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type=allowedValues} <code>可选</code></td>\n<td style=\"text-align:left\">参数允许值 <code>{string=&quot;small&quot;,&quot;huge&quot;}</code>参数只能接受<code>small</code>或者<code>huge</code>的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field <code>可选</code></td>\n<td style=\"text-align:left\">参数名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">=defaultValue</td>\n<td style=\"text-align:left\">参数默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">description(可选)</td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiParamExample\"><a href=\"#apiParamExample\" class=\"headerlink\" title=\"@apiParamExample\"></a>@apiParamExample</h2><p><code>@apiParamExample</code>参数例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiParamExample [&#123;type&#125;] [title]</div><div class=\"line\"> *    example</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">请求数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title <code>可选</code></td>\n<td style=\"text-align:left\">例子的一个简短的标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\">例子的详细信息，可多个例子并存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiSuccess\"><a href=\"#apiSuccess\" class=\"headerlink\" title=\"@apiSuccess\"></a>@apiSuccess</h2><p>请求成功后的返回字段参数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiSuccess [(group)] [&#123;type&#125;] field [description]</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">(group) <code>可选</code></td>\n<td style=\"text-align:left\">参数归属组名，不填写组名，则默认设为<code>Success 200</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">返回的数据类型，如<code>{String}</code>、<code>{Number}</code>等等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">返回的标示符（返回成功的状态码）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">description <code>可选</code></td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiSuccessExample\"><a href=\"#apiSuccessExample\" class=\"headerlink\" title=\"@apiSuccessExample\"></a>@apiSuccessExample</h2><p>请求成功后返回的字段参数例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @apiSuccessExample [&#123;type&#125;] [title] example</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{type} <code>可选</code></td>\n<td style=\"text-align:left\">请求数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">title <code>可选</code></td>\n<td style=\"text-align:left\">例子的一个简短的标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\">例子的详细信息，可多个例子并存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"apiError-amp-apiErrorExample\"><a href=\"#apiError-amp-apiErrorExample\" class=\"headerlink\" title=\"@apiError &amp; @apiErrorExample\"></a>@apiError &amp; @apiErrorExample</h2><p>这个的用法跟<code>@apiSuccess</code>、<code>@apiSuccessExample</code>的用法相类似。</p>\n<h1 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h1><p>下边举一个根据id获取文章资源API的例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @api &#123;get&#125; /articles/:id 根据单个id获取文章信息</div><div class=\"line\"> * @apiName 根据id获取文章信息</div><div class=\"line\"> * @apiGroup Articles</div><div class=\"line\"> *</div><div class=\"line\"> * @apiParam (params) &#123;String&#125; id       文章id</div><div class=\"line\"> *</div><div class=\"line\"> * @apiSuccess &#123;Array&#125; article 返回相应id的文章信息</div><div class=\"line\"> *</div><div class=\"line\"> * @apiSuccessExample Success-Response:</div><div class=\"line\"> *    HTTP/1.1 200 OK</div><div class=\"line\"> *      &#123;</div><div class=\"line\"> *        \"tile\": \"文章标题2\",</div><div class=\"line\"> *        \"date\": 1483941498230,</div><div class=\"line\"> *        \"author\": \"classlfz\",</div><div class=\"line\"> *        \"content\": \"文章的详细内容\"</div><div class=\"line\"> *       &#125;</div><div class=\"line\"> *</div><div class=\"line\"> * @apiError (Error 4xx) 404 对应id的文章信息不存在</div><div class=\"line\"> *</div><div class=\"line\"> * @apiErrorExample Error-Response:</div><div class=\"line\"> *     HTTP/1.1 404 对应id的文章信息不存在</div><div class=\"line\"> *     &#123;</div><div class=\"line\"> *       \"error\": err</div><div class=\"line\"> *     &#125;</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<p>接着我们运行<code>apidoc -i src/ -o docs</code>，就会看到项目里边多了一个docs的文件夹，打开里边的<code>index.html</code>，就可以看到生成的API文档了。如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1626912-5555c6d326baadf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"FireShot Capture 1 - Custom apiDoc browser title_ - file____home_classlfz_github_expres.png\"></p>\n<p>这样子，我们就可以轻松的通过注释得到一个API文档了，而不需要在写完代码之后还要去打开word或者md文件去另外编写API文档……对于我本人而言，我是比较喜欢这样子的工作方式的。</p>\n<p>如果项目是放在<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github</a>上边的话，我们可以使用<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">github pages</a>来<a href=\"http://www.jianshu.com/p/f8cec06f2d8b\" target=\"_blank\" rel=\"external\">公布API文档</a>，方便协同开发。</p>\n<h1 id=\"写成gulp任务\"><a href=\"#写成gulp任务\" class=\"headerlink\" title=\"写成gulp任务\"></a>写成gulp任务</h1><p>因为平时用gulp比较多，这里再补上通过gulp任务来生成apidoc文档。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp gulp-apidoc --save-dev</div></pre></td></tr></table></figure>\n<h2 id=\"编写gulp代码\"><a href=\"#编写gulp代码\" class=\"headerlink\" title=\"编写gulp代码\"></a>编写gulp代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 构建apidoc</span></div><div class=\"line\">gulp.task(<span class=\"string\">'apidoc'</span>, (done) =&gt; &#123;</div><div class=\"line\">  apidoc(&#123;</div><div class=\"line\">    <span class=\"attr\">src</span>: <span class=\"string\">'src/'</span>,</div><div class=\"line\">    <span class=\"attr\">dest</span>: <span class=\"string\">'docs'</span>,</div><div class=\"line\">    <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">includeFilters</span>: [<span class=\"string\">'.*\\\\.js$'</span>]</div><div class=\"line\">  &#125;, done);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj4m5g4v900006cwk6ut7tggh","category_id":"cj4m9kcrk000j1cwkr0vuz2cu","_id":"cj4m9kcrk000k1cwkkee1evty"},{"post_id":"cj4m5g4vp00026cwkk654o03r","category_id":"cj4m9l0i4000l1cwks7dt0hpw","_id":"cj4m9l0i4000m1cwknewffyr3"},{"post_id":"cj4m5g4vl00016cwkts05x85a","category_id":"cj4m9lgvi000n1cwkfs2wt0sc","_id":"cj4m9lgvj000o1cwk2y3sb36z"},{"post_id":"cj4m5g4vr00036cwkm86vpr2u","category_id":"cj4m9l0i4000l1cwks7dt0hpw","_id":"cj4m9lz3t000p1cwkolkpaxph"}],"PostTag":[{"post_id":"cj4m5g4vl00016cwkts05x85a","tag_id":"cj4m749ff0000q5wkz08xqcjw","_id":"cj4m75mee0002dawkzasqatgm"},{"post_id":"cj4m5g4v900006cwk6ut7tggh","tag_id":"cj4m9abqa00001cwkhud25fmk","_id":"cj4m9abqe00011cwkcxbcrs17"},{"post_id":"cj4m5g4v900006cwk6ut7tggh","tag_id":"cj4m9aeb100021cwk7vvkj7h2","_id":"cj4m9aeb200031cwkiny2oyy5"},{"post_id":"cj4m5g4v900006cwk6ut7tggh","tag_id":"cj4m9akz400041cwkfs380fbo","_id":"cj4m9akz500051cwky6qg2s0s"},{"post_id":"cj4m5g4vp00026cwkk654o03r","tag_id":"cj4m7714n0000j8wkmn6fpv2k","_id":"cj4m9f0a6000a1cwke8a4j277"},{"post_id":"cj4m5g4vp00026cwkk654o03r","tag_id":"cj4m9e0xu00061cwknrx99k24","_id":"cj4m9fe3r000b1cwkcxdwp6wp"},{"post_id":"cj4m5g4vp00026cwkk654o03r","tag_id":"cj4m9enim00081cwkar2vtkh8","_id":"cj4m9fe3r000c1cwk6o1c1m9s"},{"post_id":"cj4m5g4vr00036cwkm86vpr2u","tag_id":"cj4m7714n0000j8wkmn6fpv2k","_id":"cj4m9hcfb000f1cwka4aw0t6m"},{"post_id":"cj4m5g4vr00036cwkm86vpr2u","tag_id":"cj4m9fvmv000d1cwks8fzl93w","_id":"cj4m9hcfc000g1cwknumnmjw8"}],"Tag":[{"name":"只字片语","_id":"cj4m749ff0000q5wkz08xqcjw"},{"name":"只字片语 博客","_id":"cj4m75coo0000dawku1ems4jg"},{"name":"node.js","_id":"cj4m7714n0000j8wkmn6fpv2k"},{"name":"前端","_id":"cj4m7d5kh0002j8wkwrmpl92g"},{"name":"工具","_id":"cj4m7dux90005j8wkv8p93cxo"},{"name":"shadowsocks","_id":"cj4m9abqa00001cwkhud25fmk"},{"name":"vpn","_id":"cj4m9aeb100021cwk7vvkj7h2"},{"name":"digital ocean","_id":"cj4m9akz400041cwkfs380fbo"},{"name":"express","_id":"cj4m9e0xu00061cwknrx99k24"},{"name":"jwt","_id":"cj4m9enim00081cwkar2vtkh8"},{"name":"apidoc","_id":"cj4m9fvmv000d1cwks8fzl93w"}]}}